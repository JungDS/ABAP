FUNCTION ZCO_WBS_EXTENSION_AMOUNT_ADJ.
*"----------------------------------------------------------------------
*"*"Local interface:
*"  IMPORTING
*"     VALUE(I_PROJECT_DEFINITION) TYPE
*"        BAPI_BUS2001_NEW-PROJECT_DEFINITION
*"  TABLES
*"      EXTENSIONIN STRUCTURE  BAPIPAREX
*"----------------------------------------------------------------------

  CHECK EXTENSIONIN[] IS NOT INITIAL.

  DATA LS_PROJECT             TYPE BAPI_BUS2001_NEW.
  DATA LS_PROJECT_DETAIL      TYPE BAPI_BUS2001_DETAIL.
  DATA LR_CUSTOM_FIELDS       TYPE REF TO DATA.
  DATA LV_FIELD               TYPE FIELDNAME.

  FIELD-SYMBOLS <FS_RETURN>   TYPE BAPIRET2.
  FIELD-SYMBOLS <FS_ZZWAE>    TYPE ANY.
  FIELD-SYMBOLS <FS_ZZTCV>    TYPE ANY.


  " 설비 WBS 만 필수 여부 점검
  " 이미 생성된 프로젝트인지 점검
  CALL FUNCTION 'BAPI_BUS2001_GETDATA'
    EXPORTING
      I_PROJECT_DEFINITION = I_PROJECT_DEFINITION
    IMPORTING
      E_PROJECT_DEFINITION = LS_PROJECT_DETAIL.

  IF LS_PROJECT_DETAIL IS INITIAL.
    " 생성된 프로젝트가 아니라면 BAPI_BUS2001_CREATE 로 생성하면서
    " BUS2054 도 생성할 수 있으므로, ABAP 메모리 데이터 점검
    IMPORT BAPI_BUS2001_NEW = LS_PROJECT FROM MEMORY ID 'ZCO_BUS2001'.
  ELSE.
    LS_PROJECT = CORRESPONDING #( LS_PROJECT_DETAIL ).
  ENDIF.

  " 가져온 데이터가 현재 WBS 요소의 프로젝트 정의와 동일한지 확인
  " 설비 WBS 만 수행하도록 조건
*  CALL FUNCTION 'CONVERSION_EXIT_ABPSN_INPUT'
*    EXPORTING
*      INPUT  = LS_PROJECT-PROJECT_DEFINITION
*    IMPORTING
*      OUTPUT = LS_PROJECT-PROJECT_DEFINITION.

  CHECK LS_PROJECT-PROJECT_DEFINITION EQ I_PROJECT_DEFINITION
    AND LS_PROJECT-PROJECT_PROFILE    EQ 'Z000003'
    AND EXTENSIONIN[] IS NOT INITIAL.

  " 확장필드 정보
  LOOP AT EXTENSIONIN INTO DATA(LS_IN).

    IF LR_CUSTOM_FIELDS IS NOT INITIAL.
      FREE LR_CUSTOM_FIELDS.
    ENDIF.

    CREATE DATA LR_CUSTOM_FIELDS TYPE (LS_IN-STRUCTURE).
    ASSIGN LR_CUSTOM_FIELDS->* TO FIELD-SYMBOL(<FS_CUSTOM_FIELDS>).

    CHECK SY-SUBRC EQ 0.

    " 확장필드 구조에 값 전달
    <FS_CUSTOM_FIELDS> = LS_IN-VALUEPART1.

    " 계약금액 통화단위 조회
    ASSIGN COMPONENT 'ZZWAE' OF STRUCTURE <FS_CUSTOM_FIELDS> TO <FS_ZZWAE>.
    CHECK SY-SUBRC EQ 0.

    SELECT SINGLE CURRDEC
      FROM TCURX
     WHERE CURRKEY EQ @<FS_ZZWAE>
      INTO @DATA(LV_CURRDEC).
    CHECK SY-SUBRC EQ 0 AND LV_CURRDEC NE 2.


    " 계약금액 조회
    ASSIGN COMPONENT 'ZZTCV' OF STRUCTURE <FS_CUSTOM_FIELDS> TO <FS_ZZTCV>.
    CHECK SY-SUBRC EQ 0.
    CONDENSE <FS_ZZTCV> NO-GAPS.

    DATA LV_ZZTCV_STR TYPE CI_PRPS-ZZTCV.
    DATA LV_ZZTCV     TYPE ZCOS0021-ZZTCV.
    DATA LV_HTYPE     TYPE DD01V-DATATYPE.

    LV_ZZTCV_STR = <FS_ZZTCV>.

    REPLACE ALL OCCURRENCES OF ',' IN LV_ZZTCV_STR WITH ''.
    REPLACE ALL OCCURRENCES OF '.' IN LV_ZZTCV_STR WITH ''.

    CALL FUNCTION 'NUMERIC_CHECK'
      EXPORTING
        STRING_IN  = LV_ZZTCV_STR
      IMPORTING
        HTYPE      = LV_HTYPE.

    CHECK LV_HTYPE EQ 'NUMC'.

    LV_ZZTCV   = <FS_ZZTCV> * ( 10 ** ( LV_CURRDEC - 2 ) ).
    <FS_ZZTCV> = LV_ZZTCV.
    CONDENSE <FS_ZZTCV> NO-GAPS.

    LS_IN-VALUEPART1 = <FS_CUSTOM_FIELDS>.

    MODIFY EXTENSIONIN FROM LS_IN.

  ENDLOOP.


ENDFUNCTION.
