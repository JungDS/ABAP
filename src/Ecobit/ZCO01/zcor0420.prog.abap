*&---------------------------------------------------------------------*
*& Report YDEL_COIF
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
*&--------------------------------------------------------------------*
*& Object          REPS ZKAAFRU2
*& Object Header   PROG ZKAAFRU2
*&--------------------------------------------------------------------*
*>>>> START OF INSERTION <<<<
REPORT ZCOR0420.
*REPORT  RKAAFRU2.
* Select confirmations from table AFRU.
* Find double CO-documents using CPU-date.
* Confirmations can be analyzed with transaction COFC (from rel. 4.0).
* Optional: delete double CO-documents via submit report RKACOR21.

TABLES: AFRU, COBK, AFVC, T430, BKPF.
PARAMETERS:
  P_KOKRS LIKE CCSS-KOKRS MEMORY ID CAC OBLIGATORY.


SELECT-OPTIONS : S_BUKRS FOR BKPF-BUKRS OBLIGATORY NO-EXTENSION NO INTERVALS,

"SELECT-OPTIONS:  S_BUDAT FOR COBK-BUDAT.
                   S_BUDAT FOR COBK-BUDAT,

"20200218 by  bsg leh
"                 S_BELNR FOR BKPF-BELNR OBLIGATORY NO-EXTENSION NO INTERVALS.
                  S_BELNR FOR BKPF-BELNR  NO-EXTENSION NO INTERVALS.

PARAMETERS:
  P_DELETE LIKE BOOLE-BOOLE,
  P_TSTRUN LIKE COFI_SCR-FLG_TEST DEFAULT 'X'.


* Name of program to delete CO-documents (default RKACOR21)
DATA:
  GD_DELPROGRAM LIKE SY-REPID VALUE 'ZCOR0430'.

DATA:
  GD_CNT_AFRU   LIKE SY-TABIX,
  GD_CNT_COBK   LIKE SY-TABIX,
  GD_AWREF      LIKE ACCHD-AWREF,
  GD_AWORG      LIKE ACCHD-AWORG,
  GD_FOUND      LIKE BOOLE-BOOLE,
  GD_LAST_REFBN LIKE COBK-REFBN,
  GD_LAST_AWORG LIKE COBK-AWORG.

DATA: BEGIN OF GTV_COBK OCCURS 0,
        KOKRS LIKE COBK-KOKRS,
        BELNR LIKE COBK-BELNR,
        BUDAT LIKE COBK-BUDAT,
        AWTYP LIKE COBK-AWTYP,
        REFBN LIKE COBK-REFBN,
        AWORG LIKE COBK-AWORG,
        REFBK LIKE COBK-REFBK,
        REFGJ LIKE COBK-REFGJ,
*        REFBN LIKE COBK-REFBN,
      END OF GTV_COBK.



DATA: BEGIN OF GTV_BKPF OCCURS 0,
        KOKRS LIKE COBK-KOKRS,
        BELNR LIKE COBK-BELNR,
        CPUDT LIKE COBK-CPUDT,
        AWTYP LIKE COBK-AWTYP,
        REFBN LIKE COBK-REFBN,
        AWORG LIKE COBK-AWORG,
        REFBK LIKE COBK-REFBK,
        REFGJ LIKE COBK-REFGJ,
*        REFBN LIKE COBK-REFBN,
      END OF GTV_BKPF.


RANGES:
  RA_BELNR FOR COBK-BELNR.



FORMAT INTENSIFIED OFF.

SELECT   A~KOKRS, A~BELNR, A~BUDAT, A~AWTYP,
        A~REFBN, A~AWORG, A~REFBK ,  A~REFGJ
    INTO CORRESPONDING FIELDS OF TABLE @GTV_COBK
   FROM COBK AS A
   LEFT OUTER JOIN BKPF  AS B
   ON A~REFBN  =  B~BELNR
     AND   A~AWTYP  =  B~AWTYP
 "    AND   A~AWORG  =  B~AWORG

   WHERE  KOKRS   = @P_KOKRS
   AND    A~AWTYP   = 'BKPF'
   AND    VRGNG   = 'COIN' " 'KOLI'
   AND    A~BUDAT   IN @S_BUDAT
"   AND    BLART   IN ('Z6', 'Z3')   "20200218  BY BSG LEH
  " 전 전표유형
   AND    REFBK   IN @S_BUKRS
   AND    REFBN   IN @S_BELNR.

LOOP AT GTV_COBK.
*  SELECT COUNT(*) FROM COBK
*         WHERE  REFBT  =  'R'
*         AND    REFBN  =  GTV_COBK-REFBN
*         AND    AWTYP  =  GTV_COBK-AWTYP
*         AND    AWORG  =  GTV_COBK-AWORG
*         AND    VRGNG  = 'COIN'.

  SELECT COUNT(*)
    FROM BKPF
   WHERE BUKRS EQ S_BUKRS
     AND BUDAT   IN S_BUDAT
     AND BELNR EQ GTV_COBK-REFBN
     AND    AWTYP  =  GTV_COBK-AWTYP
  "   AND    AWORG  =  GTV_COBK-AWORG.

"     AND BLART IN ('Z6', 'Z3') "20200218  BY BSG LEH
  " 전 전표유형
     AND BSTAT NE 'Z'.

  IF SY-DBCNT > 0.
    DELETE GTV_COBK.
  ENDIF.
ENDLOOP.





"20200218 BY LEH.

"삭제된 임시전표로 거꾸로 찾기

 SELECT *
    FROM BKPF
 INTO CORRESPONDING FIELDS OF TABLE GTV_BKPF
   WHERE BUKRS IN S_BUKRS
     AND BUDAT   IN S_BUDAT
     AND BSTAT EQ 'Z'.


LOOP AT GTV_BKPF.


   SELECT COUNT(*) FROM COBK
            WHERE  REFBT  =  'R'
            AND    REFBN  =  GTV_BKPF-REFBN
           AND    AWTYP  =  GTV_BKPF-AWTYP
          AND    AWORG  =  GTV_BKPF-AWORG
           AND    VRGNG  = 'COIN'.



  IF SY-DBCNT = 0.
    DELETE GTV_BKPF.
  ENDIF.


ENDLOOP.



SORT GTV_COBK BY REFBN AWORG KOKRS BELNR.

WRITE: (12) TEXT-F01 CENTERED, "회계전표
       (08) TEXT-F02 CENTERED, "회사코드
       (08) TEXT-F03 CENTERED, "회계년도
       (12) TEXT-F04 CENTERED. "CO전표.
NEW-LINE.

LOOP AT GTV_COBK.
  IF GD_LAST_AWORG <> GTV_COBK-AWORG OR
     GD_LAST_REFBN <> GTV_COBK-REFBN.
    WRITE: (12) GTV_COBK-REFBN INTENSIFIED HOTSPOT.
    WRITE: (08) GTV_COBK-AWORG(04) INTENSIFIED.
    WRITE: (08) GTV_COBK-AWORG+04(04) INTENSIFIED.
  ENDIF.
  WRITE (12) GTV_COBK-BELNR UNDER GTV_COBK-BELNR.
  HIDE: GTV_COBK-REFBN,
        GTV_COBK-AWORG.
  GD_LAST_REFBN = GTV_COBK-REFBN.
  GD_LAST_AWORG = GTV_COBK-AWORG.
  NEW-LINE.
ENDLOOP.

SKIP.
DESCRIBE TABLE GTV_COBK LINES GD_CNT_COBK.
WRITE: / 'COBK: ', GD_CNT_COBK LEFT-JUSTIFIED INTENSIFIED.

CHECK P_DELETE = 'X'.

CLEAR:
  GD_LAST_REFBN,
  GD_LAST_AWORG,
  GD_CNT_COBK.

RA_BELNR-SIGN   = 'I'.
RA_BELNR-OPTION = 'EQ'.
LOOP AT GTV_COBK.
  IF  GD_LAST_REFBN NE GTV_COBK-REFBN
  OR GD_LAST_AWORG NE GTV_COBK-AWORG.
    RA_BELNR-LOW = GTV_COBK-BELNR.
    APPEND RA_BELNR.
    ADD 1 TO GD_CNT_COBK.
  ENDIF.
  GD_LAST_REFBN = GTV_COBK-REFBN.
  GD_LAST_AWORG = GTV_COBK-AWORG.
ENDLOOP.

READ TABLE RA_BELNR INDEX 1.
CHECK SY-SUBRC = 0.

MESSAGE S001(K5) WITH 'Delete COBK records:' GD_CNT_COBK.
SUBMIT (GD_DELPROGRAM)
       USING SELECTION-SCREEN 1000
        WITH P_KOKRS = P_KOKRS
        WITH P_PROT  = 'X'
        WITH P_TEST  = P_TSTRUN
        WITH S_BELNR IN RA_BELNR
        AND RETURN.





AT LINE-SELECTION.
  CHECK NOT GTV_COBK-REFBN IS INITIAL.
  GD_AWREF = GTV_COBK-REFBN.
  GD_AWORG = GTV_COBK-AWORG.
  CALL FUNCTION 'AC_DOCUMENT_RECORD'
    EXPORTING
      I_AWTYP = 'BKPF'
      I_AWREF = GD_AWREF
      I_AWORG = GD_AWORG.
*>>>> END OF INSERTION <<<<<<
