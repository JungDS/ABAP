*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZCOV0020........................................*
FORM GET_DATA_ZCOV0020.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT0020 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV0020 .
ZCOV0020-MANDT =
ZCOT0020-MANDT .
ZCOV0020-ZZIVC =
ZCOT0020-ZZIVC .
    SELECT SINGLE * FROM ZCOT0020T WHERE
ZZIVC = ZCOT0020-ZZIVC AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV0020-ZZIVCTX =
ZCOT0020T-ZZIVCTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV0020.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV0020 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV0020.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV0020-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT0020 WHERE
  ZZIVC = ZCOV0020-ZZIVC .
    IF SY-SUBRC = 0.
    DELETE ZCOT0020 .
    ENDIF.
    DELETE FROM ZCOT0020T WHERE
    ZZIVC = ZCOT0020-ZZIVC .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT0020 WHERE
  ZZIVC = ZCOV0020-ZZIVC .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT0020.
    ENDIF.
ZCOT0020-MANDT =
ZCOV0020-MANDT .
ZCOT0020-ZZIVC =
ZCOV0020-ZZIVC .
    IF SY-SUBRC = 0.
    UPDATE ZCOT0020 ##WARN_OK.
    ELSE.
    INSERT ZCOT0020 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT0020T WHERE
    ZZIVC = ZCOT0020-ZZIVC AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT0020T.
ZCOT0020T-ZZIVC =
ZCOT0020-ZZIVC .
ZCOT0020T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT0020T-ZZIVCTX =
ZCOV0020-ZZIVCTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT0020T ##WARN_OK.
    ELSE.
    INSERT ZCOT0020T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV0020-UPD_FLAG,
STATUS_ZCOV0020-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV0020.
  SELECT SINGLE * FROM ZCOT0020 WHERE
ZZIVC = ZCOV0020-ZZIVC .
ZCOV0020-MANDT =
ZCOT0020-MANDT .
ZCOV0020-ZZIVC =
ZCOT0020-ZZIVC .
    SELECT SINGLE * FROM ZCOT0020T WHERE
ZZIVC = ZCOT0020-ZZIVC AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV0020-ZZIVCTX =
ZCOT0020T-ZZIVCTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV0020-ZZIVCTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV0020 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV0020-ZZIVC TO
ZCOT0020-ZZIVC .
MOVE ZCOV0020-MANDT TO
ZCOT0020-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT0020'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT0020 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT0020'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT0020-ZZIVC TO
ZCOT0020T-ZZIVC .
MOVE SY-LANGU TO
ZCOT0020T-SPRAS .
MOVE ZCOV0020-MANDT TO
ZCOT0020T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT0020T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT0020T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT0020T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1010........................................*
FORM GET_DATA_ZCOV1010.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1010 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1010 .
ZCOV1010-MANDT =
ZCOT1010-MANDT .
ZCOV1010-ZZSCT =
ZCOT1010-ZZSCT .
    SELECT SINGLE * FROM ZCOT1010T WHERE
ZZSCT = ZCOT1010-ZZSCT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1010-ZZSCTTX =
ZCOT1010T-ZZSCTTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1010.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1010 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1010.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1010-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1010 WHERE
  ZZSCT = ZCOV1010-ZZSCT .
    IF SY-SUBRC = 0.
    DELETE ZCOT1010 .
    ENDIF.
    DELETE FROM ZCOT1010T WHERE
    ZZSCT = ZCOT1010-ZZSCT .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1010 WHERE
  ZZSCT = ZCOV1010-ZZSCT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1010.
    ENDIF.
ZCOT1010-MANDT =
ZCOV1010-MANDT .
ZCOT1010-ZZSCT =
ZCOV1010-ZZSCT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1010 ##WARN_OK.
    ELSE.
    INSERT ZCOT1010 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1010T WHERE
    ZZSCT = ZCOT1010-ZZSCT AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1010T.
ZCOT1010T-ZZSCT =
ZCOT1010-ZZSCT .
ZCOT1010T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1010T-ZZSCTTX =
ZCOV1010-ZZSCTTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1010T ##WARN_OK.
    ELSE.
    INSERT ZCOT1010T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1010-UPD_FLAG,
STATUS_ZCOV1010-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1010.
  SELECT SINGLE * FROM ZCOT1010 WHERE
ZZSCT = ZCOV1010-ZZSCT .
ZCOV1010-MANDT =
ZCOT1010-MANDT .
ZCOV1010-ZZSCT =
ZCOT1010-ZZSCT .
    SELECT SINGLE * FROM ZCOT1010T WHERE
ZZSCT = ZCOT1010-ZZSCT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1010-ZZSCTTX =
ZCOT1010T-ZZSCTTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1010-ZZSCTTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1010 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1010-ZZSCT TO
ZCOT1010-ZZSCT .
MOVE ZCOV1010-MANDT TO
ZCOT1010-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1010'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1010 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1010'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1010-ZZSCT TO
ZCOT1010T-ZZSCT .
MOVE SY-LANGU TO
ZCOT1010T-SPRAS .
MOVE ZCOV1010-MANDT TO
ZCOT1010T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1010T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1010T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1010T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1020........................................*
FORM GET_DATA_ZCOV1020.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1020 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1020 .
ZCOV1020-MANDT =
ZCOT1020-MANDT .
ZCOV1020-ZZPHA =
ZCOT1020-ZZPHA .
    SELECT SINGLE * FROM ZCOT1020T WHERE
ZZPHA = ZCOT1020-ZZPHA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1020-ZZPHATX =
ZCOT1020T-ZZPHATX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1020.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1020 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1020.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1020-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1020 WHERE
  ZZPHA = ZCOV1020-ZZPHA .
    IF SY-SUBRC = 0.
    DELETE ZCOT1020 .
    ENDIF.
    DELETE FROM ZCOT1020T WHERE
    ZZPHA = ZCOT1020-ZZPHA .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1020 WHERE
  ZZPHA = ZCOV1020-ZZPHA .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1020.
    ENDIF.
ZCOT1020-MANDT =
ZCOV1020-MANDT .
ZCOT1020-ZZPHA =
ZCOV1020-ZZPHA .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1020 ##WARN_OK.
    ELSE.
    INSERT ZCOT1020 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1020T WHERE
    ZZPHA = ZCOT1020-ZZPHA AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1020T.
ZCOT1020T-ZZPHA =
ZCOT1020-ZZPHA .
ZCOT1020T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1020T-ZZPHATX =
ZCOV1020-ZZPHATX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1020T ##WARN_OK.
    ELSE.
    INSERT ZCOT1020T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1020-UPD_FLAG,
STATUS_ZCOV1020-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1020.
  SELECT SINGLE * FROM ZCOT1020 WHERE
ZZPHA = ZCOV1020-ZZPHA .
ZCOV1020-MANDT =
ZCOT1020-MANDT .
ZCOV1020-ZZPHA =
ZCOT1020-ZZPHA .
    SELECT SINGLE * FROM ZCOT1020T WHERE
ZZPHA = ZCOT1020-ZZPHA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1020-ZZPHATX =
ZCOT1020T-ZZPHATX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1020-ZZPHATX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1020 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1020-ZZPHA TO
ZCOT1020-ZZPHA .
MOVE ZCOV1020-MANDT TO
ZCOT1020-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1020'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1020 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1020'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1020-ZZPHA TO
ZCOT1020T-ZZPHA .
MOVE SY-LANGU TO
ZCOT1020T-SPRAS .
MOVE ZCOV1020-MANDT TO
ZCOT1020T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1020T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1020T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1020T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1030........................................*
FORM GET_DATA_ZCOV1030.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1030 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1030 .
ZCOV1030-MANDT =
ZCOT1030-MANDT .
ZCOV1030-ZZWBT =
ZCOT1030-ZZWBT .
    SELECT SINGLE * FROM ZCOT1030T WHERE
ZZWBT = ZCOT1030-ZZWBT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1030-ZZWBTTX =
ZCOT1030T-ZZWBTTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1030.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1030 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1030.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1030-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1030 WHERE
  ZZWBT = ZCOV1030-ZZWBT .
    IF SY-SUBRC = 0.
    DELETE ZCOT1030 .
    ENDIF.
    DELETE FROM ZCOT1030T WHERE
    ZZWBT = ZCOT1030-ZZWBT .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1030 WHERE
  ZZWBT = ZCOV1030-ZZWBT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1030.
    ENDIF.
ZCOT1030-MANDT =
ZCOV1030-MANDT .
ZCOT1030-ZZWBT =
ZCOV1030-ZZWBT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1030 ##WARN_OK.
    ELSE.
    INSERT ZCOT1030 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1030T WHERE
    ZZWBT = ZCOT1030-ZZWBT AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1030T.
ZCOT1030T-ZZWBT =
ZCOT1030-ZZWBT .
ZCOT1030T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1030T-ZZWBTTX =
ZCOV1030-ZZWBTTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1030T ##WARN_OK.
    ELSE.
    INSERT ZCOT1030T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1030-UPD_FLAG,
STATUS_ZCOV1030-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1030.
  SELECT SINGLE * FROM ZCOT1030 WHERE
ZZWBT = ZCOV1030-ZZWBT .
ZCOV1030-MANDT =
ZCOT1030-MANDT .
ZCOV1030-ZZWBT =
ZCOT1030-ZZWBT .
    SELECT SINGLE * FROM ZCOT1030T WHERE
ZZWBT = ZCOT1030-ZZWBT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1030-ZZWBTTX =
ZCOT1030T-ZZWBTTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1030-ZZWBTTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1030 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1030-ZZWBT TO
ZCOT1030-ZZWBT .
MOVE ZCOV1030-MANDT TO
ZCOT1030-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1030'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1030 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1030'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1030-ZZWBT TO
ZCOT1030T-ZZWBT .
MOVE SY-LANGU TO
ZCOT1030T-SPRAS .
MOVE ZCOV1030-MANDT TO
ZCOT1030T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1030T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1030T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1030T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1040........................................*
FORM GET_DATA_ZCOV1040.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1040 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1040 .
ZCOV1040-MANDT =
ZCOT1040-MANDT .
ZCOV1040-ZZBGU =
ZCOT1040-ZZBGU .
    SELECT SINGLE * FROM ZCOT1040T WHERE
ZZBGU = ZCOT1040-ZZBGU AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1040-ZZBGUTX =
ZCOT1040T-ZZBGUTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1040.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1040 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1040.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1040-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1040 WHERE
  ZZBGU = ZCOV1040-ZZBGU .
    IF SY-SUBRC = 0.
    DELETE ZCOT1040 .
    ENDIF.
    DELETE FROM ZCOT1040T WHERE
    ZZBGU = ZCOT1040-ZZBGU .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1040 WHERE
  ZZBGU = ZCOV1040-ZZBGU .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1040.
    ENDIF.
ZCOT1040-MANDT =
ZCOV1040-MANDT .
ZCOT1040-ZZBGU =
ZCOV1040-ZZBGU .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1040 ##WARN_OK.
    ELSE.
    INSERT ZCOT1040 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1040T WHERE
    ZZBGU = ZCOT1040-ZZBGU AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1040T.
ZCOT1040T-ZZBGU =
ZCOT1040-ZZBGU .
ZCOT1040T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1040T-ZZBGUTX =
ZCOV1040-ZZBGUTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1040T ##WARN_OK.
    ELSE.
    INSERT ZCOT1040T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1040-UPD_FLAG,
STATUS_ZCOV1040-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1040.
  SELECT SINGLE * FROM ZCOT1040 WHERE
ZZBGU = ZCOV1040-ZZBGU .
ZCOV1040-MANDT =
ZCOT1040-MANDT .
ZCOV1040-ZZBGU =
ZCOT1040-ZZBGU .
    SELECT SINGLE * FROM ZCOT1040T WHERE
ZZBGU = ZCOT1040-ZZBGU AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1040-ZZBGUTX =
ZCOT1040T-ZZBGUTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1040-ZZBGUTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1040 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1040-ZZBGU TO
ZCOT1040-ZZBGU .
MOVE ZCOV1040-MANDT TO
ZCOT1040-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1040'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1040 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1040'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1040-ZZBGU TO
ZCOT1040T-ZZBGU .
MOVE SY-LANGU TO
ZCOT1040T-SPRAS .
MOVE ZCOV1040-MANDT TO
ZCOT1040T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1040T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1040T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1040T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1050........................................*
FORM GET_DATA_ZCOV1050.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1050 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1050 .
ZCOV1050-MANDT =
ZCOT1050-MANDT .
ZCOV1050-ZZBGU =
ZCOT1050-ZZBGU .
ZCOV1050-ZZBGD =
ZCOT1050-ZZBGD .
    SELECT SINGLE * FROM ZCOT1050T WHERE
ZZBGU = ZCOT1050-ZZBGU AND
ZZBGD = ZCOT1050-ZZBGD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1050-ZZBGDTX =
ZCOT1050T-ZZBGDTX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1040 WHERE
ZZBGU = ZCOT1050-ZZBGU .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1040T WHERE
ZZBGU = ZCOT1040-ZZBGU AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1050-ZZBGUTX =
ZCOT1040T-ZZBGUTX .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1050.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1050 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1050.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1050-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1050 WHERE
  ZZBGU = ZCOV1050-ZZBGU AND
  ZZBGD = ZCOV1050-ZZBGD .
    IF SY-SUBRC = 0.
    DELETE ZCOT1050 .
    ENDIF.
    DELETE FROM ZCOT1050T WHERE
    ZZBGU = ZCOT1050-ZZBGU AND
    ZZBGD = ZCOT1050-ZZBGD .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1050 WHERE
  ZZBGU = ZCOV1050-ZZBGU AND
  ZZBGD = ZCOV1050-ZZBGD .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1050.
    ENDIF.
ZCOT1050-MANDT =
ZCOV1050-MANDT .
ZCOT1050-ZZBGU =
ZCOV1050-ZZBGU .
ZCOT1050-ZZBGD =
ZCOV1050-ZZBGD .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1050 ##WARN_OK.
    ELSE.
    INSERT ZCOT1050 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1050T WHERE
    ZZBGU = ZCOT1050-ZZBGU AND
    ZZBGD = ZCOT1050-ZZBGD AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1050T.
ZCOT1050T-ZZBGU =
ZCOT1050-ZZBGU .
ZCOT1050T-ZZBGD =
ZCOT1050-ZZBGD .
ZCOT1050T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1050T-ZZBGDTX =
ZCOV1050-ZZBGDTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1050T ##WARN_OK.
    ELSE.
    INSERT ZCOT1050T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1050-UPD_FLAG,
STATUS_ZCOV1050-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1050.
  SELECT SINGLE * FROM ZCOT1050 WHERE
ZZBGU = ZCOV1050-ZZBGU AND
ZZBGD = ZCOV1050-ZZBGD .
ZCOV1050-MANDT =
ZCOT1050-MANDT .
ZCOV1050-ZZBGU =
ZCOT1050-ZZBGU .
ZCOV1050-ZZBGD =
ZCOT1050-ZZBGD .
    SELECT SINGLE * FROM ZCOT1050T WHERE
ZZBGU = ZCOT1050-ZZBGU AND
ZZBGD = ZCOT1050-ZZBGD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1050-ZZBGDTX =
ZCOT1050T-ZZBGDTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1050-ZZBGDTX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1040 WHERE
ZZBGU = ZCOT1050-ZZBGU .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1040T WHERE
ZZBGU = ZCOT1040-ZZBGU AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1050-ZZBGUTX =
ZCOT1040T-ZZBGUTX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1050-ZZBGUTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1050-ZZBGUTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1050 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1050-ZZBGU TO
ZCOT1050-ZZBGU .
MOVE ZCOV1050-ZZBGD TO
ZCOT1050-ZZBGD .
MOVE ZCOV1050-MANDT TO
ZCOT1050-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1050'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1050 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1050'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1050-ZZBGU TO
ZCOT1050T-ZZBGU .
MOVE ZCOT1050-ZZBGD TO
ZCOT1050T-ZZBGD .
MOVE SY-LANGU TO
ZCOT1050T-SPRAS .
MOVE ZCOV1050-MANDT TO
ZCOT1050T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1050T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1050T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1050T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1050 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1050-MANDT =
ZCOV1050-MANDT .
ZCOT1050-ZZBGU =
ZCOV1050-ZZBGU .
ZCOT1050-ZZBGD =
ZCOV1050-ZZBGD .
  ZCOT1050T-ZZBGU =
    ZCOT1050-ZZBGU .
  ZCOT1050T-ZZBGD =
    ZCOT1050-ZZBGD .
  ZCOT1050T-SPRAS =
    SY-LANGU .
ZCOT1050T-ZZBGDTX =
ZCOV1050-ZZBGDTX .
    SELECT SINGLE * FROM ZCOT1040 WHERE
ZZBGU = ZCOT1050-ZZBGU .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1040T WHERE
ZZBGU = ZCOT1040-ZZBGU AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1050-ZZBGUTX =
ZCOT1040T-ZZBGUTX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1050-ZZBGUTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1050-ZZBGUTX .
    ENDIF.
ENDFORM.
*...processing: ZCOV1070........................................*
FORM GET_DATA_ZCOV1070.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1070 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1070 .
ZCOV1070-MANDT =
ZCOT1070-MANDT .
ZCOV1070-ZZBAG =
ZCOT1070-ZZBAG .
    SELECT SINGLE * FROM ZCOT1070T WHERE
ZZBAG = ZCOT1070-ZZBAG AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1070-ZZBAGTX =
ZCOT1070T-ZZBAGTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1070.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1070 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1070.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1070-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1070 WHERE
  ZZBAG = ZCOV1070-ZZBAG .
    IF SY-SUBRC = 0.
    DELETE ZCOT1070 .
    ENDIF.
    DELETE FROM ZCOT1070T WHERE
    ZZBAG = ZCOT1070-ZZBAG .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1070 WHERE
  ZZBAG = ZCOV1070-ZZBAG .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1070.
    ENDIF.
ZCOT1070-MANDT =
ZCOV1070-MANDT .
ZCOT1070-ZZBAG =
ZCOV1070-ZZBAG .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1070 ##WARN_OK.
    ELSE.
    INSERT ZCOT1070 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1070T WHERE
    ZZBAG = ZCOT1070-ZZBAG AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1070T.
ZCOT1070T-ZZBAG =
ZCOT1070-ZZBAG .
ZCOT1070T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1070T-ZZBAGTX =
ZCOV1070-ZZBAGTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1070T ##WARN_OK.
    ELSE.
    INSERT ZCOT1070T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1070-UPD_FLAG,
STATUS_ZCOV1070-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1070.
  SELECT SINGLE * FROM ZCOT1070 WHERE
ZZBAG = ZCOV1070-ZZBAG .
ZCOV1070-MANDT =
ZCOT1070-MANDT .
ZCOV1070-ZZBAG =
ZCOT1070-ZZBAG .
    SELECT SINGLE * FROM ZCOT1070T WHERE
ZZBAG = ZCOT1070-ZZBAG AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1070-ZZBAGTX =
ZCOT1070T-ZZBAGTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1070-ZZBAGTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1070 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1070-ZZBAG TO
ZCOT1070-ZZBAG .
MOVE ZCOV1070-MANDT TO
ZCOT1070-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1070'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1070 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1070'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1070-ZZBAG TO
ZCOT1070T-ZZBAG .
MOVE SY-LANGU TO
ZCOT1070T-SPRAS .
MOVE ZCOV1070-MANDT TO
ZCOT1070T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1070T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1070T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1070T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1090........................................*
FORM GET_DATA_ZCOV1090.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1090 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1090 .
ZCOV1090-MANDT =
ZCOT1090-MANDT .
ZCOV1090-ZZADT =
ZCOT1090-ZZADT .
    SELECT SINGLE * FROM ZCOT1090T WHERE
ZZADT = ZCOT1090-ZZADT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1090-ZZADTTX =
ZCOT1090T-ZZADTTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1090.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1090 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1090.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1090-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1090 WHERE
  ZZADT = ZCOV1090-ZZADT .
    IF SY-SUBRC = 0.
    DELETE ZCOT1090 .
    ENDIF.
    DELETE FROM ZCOT1090T WHERE
    ZZADT = ZCOT1090-ZZADT .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1090 WHERE
  ZZADT = ZCOV1090-ZZADT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1090.
    ENDIF.
ZCOT1090-MANDT =
ZCOV1090-MANDT .
ZCOT1090-ZZADT =
ZCOV1090-ZZADT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1090 ##WARN_OK.
    ELSE.
    INSERT ZCOT1090 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1090T WHERE
    ZZADT = ZCOT1090-ZZADT AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1090T.
ZCOT1090T-ZZADT =
ZCOT1090-ZZADT .
ZCOT1090T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1090T-ZZADTTX =
ZCOV1090-ZZADTTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1090T ##WARN_OK.
    ELSE.
    INSERT ZCOT1090T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1090-UPD_FLAG,
STATUS_ZCOV1090-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1090.
  SELECT SINGLE * FROM ZCOT1090 WHERE
ZZADT = ZCOV1090-ZZADT .
ZCOV1090-MANDT =
ZCOT1090-MANDT .
ZCOV1090-ZZADT =
ZCOT1090-ZZADT .
    SELECT SINGLE * FROM ZCOT1090T WHERE
ZZADT = ZCOT1090-ZZADT AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1090-ZZADTTX =
ZCOT1090T-ZZADTTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1090-ZZADTTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1090 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1090-ZZADT TO
ZCOT1090-ZZADT .
MOVE ZCOV1090-MANDT TO
ZCOT1090-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1090'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1090 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1090'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1090-ZZADT TO
ZCOT1090T-ZZADT .
MOVE SY-LANGU TO
ZCOT1090T-SPRAS .
MOVE ZCOV1090-MANDT TO
ZCOT1090T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1090T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1090T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1090T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1100........................................*
FORM GET_DATA_ZCOV1100.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1100 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1100 .
ZCOV1100-MANDT =
ZCOT1100-MANDT .
ZCOV1100-ZZPRG =
ZCOT1100-ZZPRG .
    SELECT SINGLE * FROM ZCOT1100T WHERE
ZZPRG = ZCOT1100-ZZPRG AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1100-ZZPRGTX =
ZCOT1100T-ZZPRGTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1100.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1100 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1100.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1100-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1100 WHERE
  ZZPRG = ZCOV1100-ZZPRG .
    IF SY-SUBRC = 0.
    DELETE ZCOT1100 .
    ENDIF.
    DELETE FROM ZCOT1100T WHERE
    ZZPRG = ZCOT1100-ZZPRG .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1100 WHERE
  ZZPRG = ZCOV1100-ZZPRG .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1100.
    ENDIF.
ZCOT1100-MANDT =
ZCOV1100-MANDT .
ZCOT1100-ZZPRG =
ZCOV1100-ZZPRG .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1100 ##WARN_OK.
    ELSE.
    INSERT ZCOT1100 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1100T WHERE
    ZZPRG = ZCOT1100-ZZPRG AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1100T.
ZCOT1100T-ZZPRG =
ZCOT1100-ZZPRG .
ZCOT1100T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1100T-ZZPRGTX =
ZCOV1100-ZZPRGTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1100T ##WARN_OK.
    ELSE.
    INSERT ZCOT1100T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1100-UPD_FLAG,
STATUS_ZCOV1100-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1100.
  SELECT SINGLE * FROM ZCOT1100 WHERE
ZZPRG = ZCOV1100-ZZPRG .
ZCOV1100-MANDT =
ZCOT1100-MANDT .
ZCOV1100-ZZPRG =
ZCOT1100-ZZPRG .
    SELECT SINGLE * FROM ZCOT1100T WHERE
ZZPRG = ZCOT1100-ZZPRG AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1100-ZZPRGTX =
ZCOT1100T-ZZPRGTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1100-ZZPRGTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1100 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1100-ZZPRG TO
ZCOT1100-ZZPRG .
MOVE ZCOV1100-MANDT TO
ZCOT1100-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1100'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1100 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1100'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1100-ZZPRG TO
ZCOT1100T-ZZPRG .
MOVE SY-LANGU TO
ZCOT1100T-SPRAS .
MOVE ZCOV1100-MANDT TO
ZCOT1100T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1100T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1100T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1100T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1110........................................*
FORM GET_DATA_ZCOV1110.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1110 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1110 .
ZCOV1110-MANDT =
ZCOT1110-MANDT .
ZCOV1110-ZZHWB =
ZCOT1110-ZZHWB .
    SELECT SINGLE * FROM ZCOT1110T WHERE
ZZHWB = ZCOT1110-ZZHWB AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1110-ZZHWBTX =
ZCOT1110T-ZZHWBTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1110.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1110 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1110.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1110-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1110 WHERE
  ZZHWB = ZCOV1110-ZZHWB .
    IF SY-SUBRC = 0.
    DELETE ZCOT1110 .
    ENDIF.
    DELETE FROM ZCOT1110T WHERE
    ZZHWB = ZCOT1110-ZZHWB .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1110 WHERE
  ZZHWB = ZCOV1110-ZZHWB .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1110.
    ENDIF.
ZCOT1110-MANDT =
ZCOV1110-MANDT .
ZCOT1110-ZZHWB =
ZCOV1110-ZZHWB .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1110 ##WARN_OK.
    ELSE.
    INSERT ZCOT1110 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1110T WHERE
    ZZHWB = ZCOT1110-ZZHWB AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1110T.
ZCOT1110T-ZZHWB =
ZCOT1110-ZZHWB .
ZCOT1110T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1110T-ZZHWBTX =
ZCOV1110-ZZHWBTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1110T ##WARN_OK.
    ELSE.
    INSERT ZCOT1110T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1110-UPD_FLAG,
STATUS_ZCOV1110-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1110.
  SELECT SINGLE * FROM ZCOT1110 WHERE
ZZHWB = ZCOV1110-ZZHWB .
ZCOV1110-MANDT =
ZCOT1110-MANDT .
ZCOV1110-ZZHWB =
ZCOT1110-ZZHWB .
    SELECT SINGLE * FROM ZCOT1110T WHERE
ZZHWB = ZCOT1110-ZZHWB AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1110-ZZHWBTX =
ZCOT1110T-ZZHWBTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1110-ZZHWBTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1110 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1110-ZZHWB TO
ZCOT1110-ZZHWB .
MOVE ZCOV1110-MANDT TO
ZCOT1110-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1110'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1110 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1110'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1110-ZZHWB TO
ZCOT1110T-ZZHWB .
MOVE SY-LANGU TO
ZCOT1110T-SPRAS .
MOVE ZCOV1110-MANDT TO
ZCOT1110T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1110T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1110T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1110T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1120........................................*
FORM GET_DATA_ZCOV1120.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1120 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1120 .
ZCOV1120-MANDT =
ZCOT1120-MANDT .
ZCOV1120-COTYP =
ZCOT1120-COTYP .
    SELECT SINGLE * FROM ZCOT1120T WHERE
COTYP = ZCOT1120-COTYP AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1120-COTXT =
ZCOT1120T-COTXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1120.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1120 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1120.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1120-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1120 WHERE
  COTYP = ZCOV1120-COTYP .
    IF SY-SUBRC = 0.
    DELETE ZCOT1120 .
    ENDIF.
    DELETE FROM ZCOT1120T WHERE
    COTYP = ZCOT1120-COTYP .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1120 WHERE
  COTYP = ZCOV1120-COTYP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1120.
    ENDIF.
ZCOT1120-MANDT =
ZCOV1120-MANDT .
ZCOT1120-COTYP =
ZCOV1120-COTYP .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1120 ##WARN_OK.
    ELSE.
    INSERT ZCOT1120 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1120T WHERE
    COTYP = ZCOT1120-COTYP AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1120T.
ZCOT1120T-COTYP =
ZCOT1120-COTYP .
ZCOT1120T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1120T-COTXT =
ZCOV1120-COTXT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1120T ##WARN_OK.
    ELSE.
    INSERT ZCOT1120T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1120-UPD_FLAG,
STATUS_ZCOV1120-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1120.
  SELECT SINGLE * FROM ZCOT1120 WHERE
COTYP = ZCOV1120-COTYP .
ZCOV1120-MANDT =
ZCOT1120-MANDT .
ZCOV1120-COTYP =
ZCOT1120-COTYP .
    SELECT SINGLE * FROM ZCOT1120T WHERE
COTYP = ZCOT1120-COTYP AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1120-COTXT =
ZCOT1120T-COTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1120-COTXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1120 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1120-COTYP TO
ZCOT1120-COTYP .
MOVE ZCOV1120-MANDT TO
ZCOT1120-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1120'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1120 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1120'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1120-COTYP TO
ZCOT1120T-COTYP .
MOVE SY-LANGU TO
ZCOT1120T-SPRAS .
MOVE ZCOV1120-MANDT TO
ZCOT1120T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1120T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1120T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1120T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1130........................................*
FORM GET_DATA_ZCOV1130.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1130 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1130 .
ZCOV1130-MANDT =
ZCOT1130-MANDT .
ZCOV1130-CTYPE =
ZCOT1130-CTYPE .
    SELECT SINGLE * FROM ZCOT1130T WHERE
CTYPE = ZCOT1130-CTYPE AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1130-CTEXT =
ZCOT1130T-CTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1130.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1130 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1130.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1130-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1130 WHERE
  CTYPE = ZCOV1130-CTYPE .
    IF SY-SUBRC = 0.
    DELETE ZCOT1130 .
    ENDIF.
    DELETE FROM ZCOT1130T WHERE
    CTYPE = ZCOT1130-CTYPE .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1130 WHERE
  CTYPE = ZCOV1130-CTYPE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1130.
    ENDIF.
ZCOT1130-MANDT =
ZCOV1130-MANDT .
ZCOT1130-CTYPE =
ZCOV1130-CTYPE .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1130 ##WARN_OK.
    ELSE.
    INSERT ZCOT1130 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1130T WHERE
    CTYPE = ZCOT1130-CTYPE AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1130T.
ZCOT1130T-CTYPE =
ZCOT1130-CTYPE .
ZCOT1130T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1130T-CTEXT =
ZCOV1130-CTEXT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1130T ##WARN_OK.
    ELSE.
    INSERT ZCOT1130T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1130-UPD_FLAG,
STATUS_ZCOV1130-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1130.
  SELECT SINGLE * FROM ZCOT1130 WHERE
CTYPE = ZCOV1130-CTYPE .
ZCOV1130-MANDT =
ZCOT1130-MANDT .
ZCOV1130-CTYPE =
ZCOT1130-CTYPE .
    SELECT SINGLE * FROM ZCOT1130T WHERE
CTYPE = ZCOT1130-CTYPE AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1130-CTEXT =
ZCOT1130T-CTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1130-CTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1130 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1130-CTYPE TO
ZCOT1130-CTYPE .
MOVE ZCOV1130-MANDT TO
ZCOT1130-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1130'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1130 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1130'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1130-CTYPE TO
ZCOT1130T-CTYPE .
MOVE SY-LANGU TO
ZCOT1130T-SPRAS .
MOVE ZCOV1130-MANDT TO
ZCOT1130T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1130T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1130T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1130T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1140........................................*
FORM GET_DATA_ZCOV1140.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1140 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1140 .
ZCOV1140-MANDT =
ZCOT1140-MANDT .
ZCOV1140-KSTAR =
ZCOT1140-KSTAR .
ZCOV1140-KSTXT =
ZCOT1140-KSTXT .
    SELECT SINGLE * FROM CSKA WHERE
KTOPL = '1000' AND
KSTAR = ZCOT1140-KSTAR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CSKU WHERE
KTOPL = CSKA-KTOPL AND
KSTAR = CSKA-KSTAR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1140-KTEXT =
CSKU-KTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1140.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1140 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1140.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1140-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1140 WHERE
  KSTAR = ZCOV1140-KSTAR .
    IF SY-SUBRC = 0.
    DELETE ZCOT1140 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1140 WHERE
  KSTAR = ZCOV1140-KSTAR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1140.
    ENDIF.
ZCOT1140-MANDT =
ZCOV1140-MANDT .
ZCOT1140-KSTAR =
ZCOV1140-KSTAR .
ZCOT1140-KSTXT =
ZCOV1140-KSTXT .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1140 ##WARN_OK.
    ELSE.
    INSERT ZCOT1140 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1140-UPD_FLAG,
STATUS_ZCOV1140-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1140.
  SELECT SINGLE * FROM ZCOT1140 WHERE
KSTAR = ZCOV1140-KSTAR .
ZCOV1140-MANDT =
ZCOT1140-MANDT .
ZCOV1140-KSTAR =
ZCOT1140-KSTAR .
ZCOV1140-KSTXT =
ZCOT1140-KSTXT .
    SELECT SINGLE * FROM CSKA WHERE
KTOPL = '1000' AND
KSTAR = ZCOT1140-KSTAR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CSKU WHERE
KTOPL = CSKA-KTOPL AND
KSTAR = CSKA-KSTAR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1140-KTEXT =
CSKU-KTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1140-KTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1140-KTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1140 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1140-KSTAR TO
ZCOT1140-KSTAR .
MOVE ZCOV1140-MANDT TO
ZCOT1140-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1140'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1140 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1140'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1140 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1140-MANDT =
ZCOV1140-MANDT .
ZCOT1140-KSTAR =
ZCOV1140-KSTAR .
ZCOT1140-KSTXT =
ZCOV1140-KSTXT .
    SELECT SINGLE * FROM CSKA WHERE
KTOPL = '1000' AND
KSTAR = ZCOT1140-KSTAR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CSKU WHERE
KTOPL = CSKA-KTOPL AND
KSTAR = CSKA-KSTAR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1140-KTEXT =
CSKU-KTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1140-KTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1140-KTEXT .
    ENDIF.
ENDFORM.
*...processing: ZCOV1150........................................*
FORM GET_DATA_ZCOV1150.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1150 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1150 .
ZCOV1150-MANDT =
ZCOT1150-MANDT .
ZCOV1150-PRCTR =
ZCOT1150-PRCTR .
ZCOV1150-BUKRS =
ZCOT1150-BUKRS .
    SELECT SINGLE * FROM CEPC WHERE
PRCTR = ZCOT1150-PRCTR AND
DATBI = '99991231' AND
KOKRS = '1000' .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CEPCT WHERE
PRCTR = CEPC-PRCTR AND
DATBI = CEPC-DATBI AND
KOKRS = CEPC-KOKRS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1150-KTEXT =
CEPCT-KTEXT .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1150-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1150-BUTXT =
T001-BUTXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1150.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1150 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1150.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1150-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1150 WHERE
  PRCTR = ZCOV1150-PRCTR AND
  BUKRS = ZCOV1150-BUKRS .
    IF SY-SUBRC = 0.
    DELETE ZCOT1150 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1150 WHERE
  PRCTR = ZCOV1150-PRCTR AND
  BUKRS = ZCOV1150-BUKRS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1150.
    ENDIF.
ZCOT1150-MANDT =
ZCOV1150-MANDT .
ZCOT1150-PRCTR =
ZCOV1150-PRCTR .
ZCOT1150-BUKRS =
ZCOV1150-BUKRS .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1150 ##WARN_OK.
    ELSE.
    INSERT ZCOT1150 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1150-UPD_FLAG,
STATUS_ZCOV1150-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1150.
  SELECT SINGLE * FROM ZCOT1150 WHERE
PRCTR = ZCOV1150-PRCTR AND
BUKRS = ZCOV1150-BUKRS .
ZCOV1150-MANDT =
ZCOT1150-MANDT .
ZCOV1150-PRCTR =
ZCOT1150-PRCTR .
ZCOV1150-BUKRS =
ZCOT1150-BUKRS .
    SELECT SINGLE * FROM CEPC WHERE
PRCTR = ZCOT1150-PRCTR AND
DATBI = '99991231' AND
KOKRS = '1000' .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CEPCT WHERE
PRCTR = CEPC-PRCTR AND
DATBI = CEPC-DATBI AND
KOKRS = CEPC-KOKRS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1150-KTEXT =
CEPCT-KTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1150-KTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1150-KTEXT .
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1150-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1150-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1150-BUTXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1150 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1150-PRCTR TO
ZCOT1150-PRCTR .
MOVE ZCOV1150-BUKRS TO
ZCOT1150-BUKRS .
MOVE ZCOV1150-MANDT TO
ZCOT1150-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1150'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1150 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1150'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1150 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1150-MANDT =
ZCOV1150-MANDT .
ZCOT1150-PRCTR =
ZCOV1150-PRCTR .
ZCOT1150-BUKRS =
ZCOV1150-BUKRS .
    SELECT SINGLE * FROM CEPC WHERE
PRCTR = ZCOT1150-PRCTR AND
DATBI = '99991231' AND
KOKRS = '1000' .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM CEPCT WHERE
PRCTR = CEPC-PRCTR AND
DATBI = CEPC-DATBI AND
KOKRS = CEPC-KOKRS AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1150-KTEXT =
CEPCT-KTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1150-KTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1150-KTEXT .
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1150-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1150-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1150-BUTXT .
    ENDIF.
ENDFORM.
*...processing: ZCOV1220........................................*
FORM GET_DATA_ZCOV1220.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1220 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1220 .
ZCOV1220-MANDT =
ZCOT1220-MANDT .
ZCOV1220-WERKS =
ZCOT1220-WERKS .
ZCOV1220-MATNR =
ZCOT1220-MATNR .
ZCOV1220-NETPR =
ZCOT1220-NETPR .
ZCOV1220-WAERS =
ZCOT1220-WAERS .
    SELECT SINGLE * FROM MARC WHERE
MATNR = ZCOT1220-MATNR AND
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MARA WHERE
MATNR = MARC-MATNR .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCOV1220-MAKTX =
MAKT-MAKTX .
        ENDIF.
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM T001W WHERE
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
ZCOV1220-NAME1 =
T001W-NAME1 .
    ENDIF.
    SELECT SINGLE * FROM TCURC WHERE
WAERS = ZCOT1220-WAERS .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1220.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1220 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1220.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1220-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1220 WHERE
  WERKS = ZCOV1220-WERKS AND
  MATNR = ZCOV1220-MATNR .
    IF SY-SUBRC = 0.
    DELETE ZCOT1220 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1220 WHERE
  WERKS = ZCOV1220-WERKS AND
  MATNR = ZCOV1220-MATNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1220.
    ENDIF.
ZCOT1220-MANDT =
ZCOV1220-MANDT .
ZCOT1220-WERKS =
ZCOV1220-WERKS .
ZCOT1220-MATNR =
ZCOV1220-MATNR .
ZCOT1220-NETPR =
ZCOV1220-NETPR .
ZCOT1220-WAERS =
ZCOV1220-WAERS .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1220 ##WARN_OK.
    ELSE.
    INSERT ZCOT1220 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1220-UPD_FLAG,
STATUS_ZCOV1220-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1220.
  SELECT SINGLE * FROM ZCOT1220 WHERE
WERKS = ZCOV1220-WERKS AND
MATNR = ZCOV1220-MATNR .
ZCOV1220-MANDT =
ZCOT1220-MANDT .
ZCOV1220-WERKS =
ZCOT1220-WERKS .
ZCOV1220-MATNR =
ZCOT1220-MATNR .
ZCOV1220-NETPR =
ZCOT1220-NETPR .
ZCOV1220-WAERS =
ZCOT1220-WAERS .
    SELECT SINGLE * FROM MARC WHERE
MATNR = ZCOT1220-MATNR AND
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MARA WHERE
MATNR = MARC-MATNR .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCOV1220-MAKTX =
MAKT-MAKTX .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCOV1220-MAKTX .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1220-MAKTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1220-MAKTX .
    ENDIF.
    SELECT SINGLE * FROM T001W WHERE
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
ZCOV1220-NAME1 =
T001W-NAME1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1220-NAME1 .
    ENDIF.
    SELECT SINGLE * FROM TCURC WHERE
WAERS = ZCOT1220-WAERS .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1220 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1220-WERKS TO
ZCOT1220-WERKS .
MOVE ZCOV1220-MATNR TO
ZCOT1220-MATNR .
MOVE ZCOV1220-MANDT TO
ZCOT1220-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1220'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1220 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1220'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1220 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1220-MANDT =
ZCOV1220-MANDT .
ZCOT1220-WERKS =
ZCOV1220-WERKS .
ZCOT1220-MATNR =
ZCOV1220-MATNR .
ZCOT1220-NETPR =
ZCOV1220-NETPR .
ZCOT1220-WAERS =
ZCOV1220-WAERS .
    SELECT SINGLE * FROM MARC WHERE
MATNR = ZCOT1220-MATNR AND
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM MARA WHERE
MATNR = MARC-MATNR .
      IF SY-SUBRC EQ 0.
        SELECT SINGLE * FROM MAKT WHERE
MATNR = MARA-MATNR AND
SPRAS = SY-LANGU .
        IF SY-SUBRC EQ 0.
ZCOV1220-MAKTX =
MAKT-MAKTX .
        ELSE.
          CLEAR SY-SUBRC.
          CLEAR ZCOV1220-MAKTX .
        ENDIF.
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1220-MAKTX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1220-MAKTX .
    ENDIF.
    SELECT SINGLE * FROM T001W WHERE
WERKS = ZCOT1220-WERKS .
    IF SY-SUBRC EQ 0.
ZCOV1220-NAME1 =
T001W-NAME1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1220-NAME1 .
    ENDIF.
    SELECT SINGLE * FROM TCURC WHERE
WAERS = ZCOT1220-WAERS .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: ZCOV1230........................................*
FORM GET_DATA_ZCOV1230.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1230 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1230 .
ZCOV1230-MANDT =
ZCOT1230-MANDT .
ZCOV1230-BUKRS =
ZCOT1230-BUKRS .
ZCOV1230-POSID =
ZCOT1230-POSID .
ZCOV1230-SAKNR =
ZCOT1230-SAKNR .
    SELECT SINGLE * FROM SKA1 WHERE
KTOPL = '1000' AND
SAKNR = ZCOT1230-SAKNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1230-TXT20 =
SKAT-TXT20 .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1230-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1230-BUTXT =
T001-BUTXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1230.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1230 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1230.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1230-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1230 WHERE
  BUKRS = ZCOV1230-BUKRS AND
  POSID = ZCOV1230-POSID .
    IF SY-SUBRC = 0.
    DELETE ZCOT1230 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1230 WHERE
  BUKRS = ZCOV1230-BUKRS AND
  POSID = ZCOV1230-POSID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1230.
    ENDIF.
ZCOT1230-MANDT =
ZCOV1230-MANDT .
ZCOT1230-BUKRS =
ZCOV1230-BUKRS .
ZCOT1230-POSID =
ZCOV1230-POSID .
ZCOT1230-SAKNR =
ZCOV1230-SAKNR .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1230 ##WARN_OK.
    ELSE.
    INSERT ZCOT1230 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1230-UPD_FLAG,
STATUS_ZCOV1230-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1230.
  SELECT SINGLE * FROM ZCOT1230 WHERE
BUKRS = ZCOV1230-BUKRS AND
POSID = ZCOV1230-POSID .
ZCOV1230-MANDT =
ZCOT1230-MANDT .
ZCOV1230-BUKRS =
ZCOT1230-BUKRS .
ZCOV1230-POSID =
ZCOT1230-POSID .
ZCOV1230-SAKNR =
ZCOT1230-SAKNR .
    SELECT SINGLE * FROM SKA1 WHERE
KTOPL = '1000' AND
SAKNR = ZCOT1230-SAKNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1230-TXT20 =
SKAT-TXT20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1230-TXT20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1230-TXT20 .
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1230-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1230-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1230-BUTXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1230 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1230-BUKRS TO
ZCOT1230-BUKRS .
MOVE ZCOV1230-POSID TO
ZCOT1230-POSID .
MOVE ZCOV1230-MANDT TO
ZCOT1230-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1230'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1230 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1230'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1230 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1230-MANDT =
ZCOV1230-MANDT .
ZCOT1230-BUKRS =
ZCOV1230-BUKRS .
ZCOT1230-POSID =
ZCOV1230-POSID .
ZCOT1230-SAKNR =
ZCOV1230-SAKNR .
    SELECT SINGLE * FROM SKA1 WHERE
KTOPL = '1000' AND
SAKNR = ZCOT1230-SAKNR .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM SKAT WHERE
KTOPL = SKA1-KTOPL AND
SAKNR = SKA1-SAKNR AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1230-TXT20 =
SKAT-TXT20 .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1230-TXT20 .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1230-TXT20 .
    ENDIF.
    SELECT SINGLE * FROM T001 WHERE
BUKRS = ZCOT1230-BUKRS .
    IF SY-SUBRC EQ 0.
ZCOV1230-BUTXT =
T001-BUTXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1230-BUTXT .
    ENDIF.
ENDFORM.
*...processing: ZCOV1260........................................*
FORM GET_DATA_ZCOV1260.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1260 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1260 .
ZCOV1260-RCLNT =
ZCOT1260-RCLNT .
ZCOV1260-BUKRS =
ZCOT1260-BUKRS .
ZCOV1260-SPMON =
ZCOT1260-SPMON .
ZCOV1260-FMATNR =
ZCOT1260-FMATNR .
ZCOV1260-WERKS =
ZCOT1260-WERKS .
ZCOV1260-LIFNR =
ZCOT1260-LIFNR .
ZCOV1260-MATKL =
ZCOT1260-MATKL .
ZCOV1260-BWRBTR =
ZCOT1260-BWRBTR .
ZCOV1260-BMENGE =
ZCOT1260-BMENGE .
ZCOV1260-BMEINS =
ZCOT1260-BMEINS .
ZCOV1260-FMENGE =
ZCOT1260-FMENGE .
ZCOV1260-FMEINS =
ZCOT1260-FMEINS .
ZCOV1260-RMATNR =
ZCOT1260-RMATNR .
ZCOV1260-RMENGE =
ZCOT1260-RMENGE .
ZCOV1260-RMEINS =
ZCOT1260-RMEINS .
ZCOV1260-RWRBTR =
ZCOT1260-RWRBTR .
ZCOV1260-D1WRBTR =
ZCOT1260-D1WRBTR .
ZCOV1260-D2WRBTR =
ZCOT1260-D2WRBTR .
ZCOV1260-D3WRBTR =
ZCOT1260-D3WRBTR .
ZCOV1260-D4WRBTR =
ZCOT1260-D4WRBTR .
ZCOV1260-LWRBTR =
ZCOT1260-LWRBTR .
ZCOV1260-MWRBTR =
ZCOT1260-MWRBTR .
ZCOV1260-ZCOGM =
ZCOT1260-ZCOGM .
ZCOV1260-SMENGE =
ZCOT1260-SMENGE .
ZCOV1260-SMEINS =
ZCOT1260-SMEINS .
ZCOV1260-SWRBTR =
ZCOT1260-SWRBTR .
ZCOV1260-ZCOGS =
ZCOT1260-ZCOGS .
ZCOV1260-EMENGE =
ZCOT1260-EMENGE .
ZCOV1260-EMEINS =
ZCOT1260-EMEINS .
ZCOV1260-EWRBTR =
ZCOT1260-EWRBTR .
ZCOV1260-EUWRBTR =
ZCOT1260-EUWRBTR .
ZCOV1260-BELNR1 =
ZCOT1260-BELNR1 .
ZCOV1260-BELNR2 =
ZCOT1260-BELNR2 .
ZCOV1260-BELNR3 =
ZCOT1260-BELNR3 .
ZCOV1260-TWAER =
ZCOT1260-TWAER .
ZCOV1260-ERDAT =
ZCOT1260-ERDAT .
ZCOV1260-ERZET =
ZCOT1260-ERZET .
ZCOV1260-ERNAM =
ZCOT1260-ERNAM .
ZCOV1260-AEDAT =
ZCOT1260-AEDAT .
ZCOV1260-AEZET =
ZCOT1260-AEZET .
ZCOV1260-AENAM =
ZCOT1260-AENAM .
<VIM_TOTAL_STRUC> = ZCOV1260.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1260 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1260.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1260-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1260 WHERE
  BUKRS = ZCOV1260-BUKRS AND
  SPMON = ZCOV1260-SPMON AND
  FMATNR = ZCOV1260-FMATNR AND
  WERKS = ZCOV1260-WERKS .
    IF SY-SUBRC = 0.
    DELETE ZCOT1260 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1260 WHERE
  BUKRS = ZCOV1260-BUKRS AND
  SPMON = ZCOV1260-SPMON AND
  FMATNR = ZCOV1260-FMATNR AND
  WERKS = ZCOV1260-WERKS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1260.
    ENDIF.
ZCOT1260-RCLNT =
ZCOV1260-RCLNT .
ZCOT1260-BUKRS =
ZCOV1260-BUKRS .
ZCOT1260-SPMON =
ZCOV1260-SPMON .
ZCOT1260-FMATNR =
ZCOV1260-FMATNR .
ZCOT1260-WERKS =
ZCOV1260-WERKS .
ZCOT1260-LIFNR =
ZCOV1260-LIFNR .
ZCOT1260-MATKL =
ZCOV1260-MATKL .
ZCOT1260-BWRBTR =
ZCOV1260-BWRBTR .
ZCOT1260-BMENGE =
ZCOV1260-BMENGE .
ZCOT1260-BMEINS =
ZCOV1260-BMEINS .
ZCOT1260-FMENGE =
ZCOV1260-FMENGE .
ZCOT1260-FMEINS =
ZCOV1260-FMEINS .
ZCOT1260-RMATNR =
ZCOV1260-RMATNR .
ZCOT1260-RMENGE =
ZCOV1260-RMENGE .
ZCOT1260-RMEINS =
ZCOV1260-RMEINS .
ZCOT1260-RWRBTR =
ZCOV1260-RWRBTR .
ZCOT1260-D1WRBTR =
ZCOV1260-D1WRBTR .
ZCOT1260-D2WRBTR =
ZCOV1260-D2WRBTR .
ZCOT1260-D3WRBTR =
ZCOV1260-D3WRBTR .
ZCOT1260-D4WRBTR =
ZCOV1260-D4WRBTR .
ZCOT1260-LWRBTR =
ZCOV1260-LWRBTR .
ZCOT1260-MWRBTR =
ZCOV1260-MWRBTR .
ZCOT1260-ZCOGM =
ZCOV1260-ZCOGM .
ZCOT1260-SMENGE =
ZCOV1260-SMENGE .
ZCOT1260-SMEINS =
ZCOV1260-SMEINS .
ZCOT1260-SWRBTR =
ZCOV1260-SWRBTR .
ZCOT1260-ZCOGS =
ZCOV1260-ZCOGS .
ZCOT1260-EMENGE =
ZCOV1260-EMENGE .
ZCOT1260-EMEINS =
ZCOV1260-EMEINS .
ZCOT1260-EWRBTR =
ZCOV1260-EWRBTR .
ZCOT1260-EUWRBTR =
ZCOV1260-EUWRBTR .
ZCOT1260-BELNR1 =
ZCOV1260-BELNR1 .
ZCOT1260-BELNR2 =
ZCOV1260-BELNR2 .
ZCOT1260-BELNR3 =
ZCOV1260-BELNR3 .
ZCOT1260-TWAER =
ZCOV1260-TWAER .
ZCOT1260-ERDAT =
ZCOV1260-ERDAT .
ZCOT1260-ERZET =
ZCOV1260-ERZET .
ZCOT1260-ERNAM =
ZCOV1260-ERNAM .
ZCOT1260-AEDAT =
ZCOV1260-AEDAT .
ZCOT1260-AEZET =
ZCOV1260-AEZET .
ZCOT1260-AENAM =
ZCOV1260-AENAM .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1260 ##WARN_OK.
    ELSE.
    INSERT ZCOT1260 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1260-UPD_FLAG,
STATUS_ZCOV1260-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1260.
  SELECT SINGLE * FROM ZCOT1260 WHERE
BUKRS = ZCOV1260-BUKRS AND
SPMON = ZCOV1260-SPMON AND
FMATNR = ZCOV1260-FMATNR AND
WERKS = ZCOV1260-WERKS .
ZCOV1260-RCLNT =
ZCOT1260-RCLNT .
ZCOV1260-BUKRS =
ZCOT1260-BUKRS .
ZCOV1260-SPMON =
ZCOT1260-SPMON .
ZCOV1260-FMATNR =
ZCOT1260-FMATNR .
ZCOV1260-WERKS =
ZCOT1260-WERKS .
ZCOV1260-LIFNR =
ZCOT1260-LIFNR .
ZCOV1260-MATKL =
ZCOT1260-MATKL .
ZCOV1260-BWRBTR =
ZCOT1260-BWRBTR .
ZCOV1260-BMENGE =
ZCOT1260-BMENGE .
ZCOV1260-BMEINS =
ZCOT1260-BMEINS .
ZCOV1260-FMENGE =
ZCOT1260-FMENGE .
ZCOV1260-FMEINS =
ZCOT1260-FMEINS .
ZCOV1260-RMATNR =
ZCOT1260-RMATNR .
ZCOV1260-RMENGE =
ZCOT1260-RMENGE .
ZCOV1260-RMEINS =
ZCOT1260-RMEINS .
ZCOV1260-RWRBTR =
ZCOT1260-RWRBTR .
ZCOV1260-D1WRBTR =
ZCOT1260-D1WRBTR .
ZCOV1260-D2WRBTR =
ZCOT1260-D2WRBTR .
ZCOV1260-D3WRBTR =
ZCOT1260-D3WRBTR .
ZCOV1260-D4WRBTR =
ZCOT1260-D4WRBTR .
ZCOV1260-LWRBTR =
ZCOT1260-LWRBTR .
ZCOV1260-MWRBTR =
ZCOT1260-MWRBTR .
ZCOV1260-ZCOGM =
ZCOT1260-ZCOGM .
ZCOV1260-SMENGE =
ZCOT1260-SMENGE .
ZCOV1260-SMEINS =
ZCOT1260-SMEINS .
ZCOV1260-SWRBTR =
ZCOT1260-SWRBTR .
ZCOV1260-ZCOGS =
ZCOT1260-ZCOGS .
ZCOV1260-EMENGE =
ZCOT1260-EMENGE .
ZCOV1260-EMEINS =
ZCOT1260-EMEINS .
ZCOV1260-EWRBTR =
ZCOT1260-EWRBTR .
ZCOV1260-EUWRBTR =
ZCOT1260-EUWRBTR .
ZCOV1260-BELNR1 =
ZCOT1260-BELNR1 .
ZCOV1260-BELNR2 =
ZCOT1260-BELNR2 .
ZCOV1260-BELNR3 =
ZCOT1260-BELNR3 .
ZCOV1260-TWAER =
ZCOT1260-TWAER .
ZCOV1260-ERDAT =
ZCOT1260-ERDAT .
ZCOV1260-ERZET =
ZCOT1260-ERZET .
ZCOV1260-ERNAM =
ZCOT1260-ERNAM .
ZCOV1260-AEDAT =
ZCOT1260-AEDAT .
ZCOV1260-AEZET =
ZCOT1260-AEZET .
ZCOV1260-AENAM =
ZCOT1260-AENAM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1260 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1260-BUKRS TO
ZCOT1260-BUKRS .
MOVE ZCOV1260-SPMON TO
ZCOT1260-SPMON .
MOVE ZCOV1260-FMATNR TO
ZCOT1260-FMATNR .
MOVE ZCOV1260-WERKS TO
ZCOT1260-WERKS .
MOVE ZCOV1260-RCLNT TO
ZCOT1260-RCLNT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1260'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1260 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1260'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1270........................................*
FORM GET_DATA_ZCOV1270.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1270 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1270 .
ZCOV1270-MANDT =
ZCOT1270-MANDT .
ZCOV1270-ZZIZW =
ZCOT1270-ZZIZW .
    SELECT SINGLE * FROM ZCOT1270T WHERE
ZZIZW = ZCOT1270-ZZIZW AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1270-ZZIZWTX =
ZCOT1270T-ZZIZWTX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1270.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1270 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1270.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1270-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1270 WHERE
  ZZIZW = ZCOV1270-ZZIZW .
    IF SY-SUBRC = 0.
    DELETE ZCOT1270 .
    ENDIF.
    DELETE FROM ZCOT1270T WHERE
    ZZIZW = ZCOT1270-ZZIZW .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1270 WHERE
  ZZIZW = ZCOV1270-ZZIZW .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1270.
    ENDIF.
ZCOT1270-MANDT =
ZCOV1270-MANDT .
ZCOT1270-ZZIZW =
ZCOV1270-ZZIZW .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1270 ##WARN_OK.
    ELSE.
    INSERT ZCOT1270 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1270T WHERE
    ZZIZW = ZCOT1270-ZZIZW AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1270T.
ZCOT1270T-ZZIZW =
ZCOT1270-ZZIZW .
ZCOT1270T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1270T-ZZIZWTX =
ZCOV1270-ZZIZWTX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1270T ##WARN_OK.
    ELSE.
    INSERT ZCOT1270T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1270-UPD_FLAG,
STATUS_ZCOV1270-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1270.
  SELECT SINGLE * FROM ZCOT1270 WHERE
ZZIZW = ZCOV1270-ZZIZW .
ZCOV1270-MANDT =
ZCOT1270-MANDT .
ZCOV1270-ZZIZW =
ZCOT1270-ZZIZW .
    SELECT SINGLE * FROM ZCOT1270T WHERE
ZZIZW = ZCOT1270-ZZIZW AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1270-ZZIZWTX =
ZCOT1270T-ZZIZWTX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1270-ZZIZWTX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1270 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1270-ZZIZW TO
ZCOT1270-ZZIZW .
MOVE ZCOV1270-MANDT TO
ZCOT1270-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1270'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1270 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1270'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1270-ZZIZW TO
ZCOT1270T-ZZIZW .
MOVE SY-LANGU TO
ZCOT1270T-SPRAS .
MOVE ZCOV1270-MANDT TO
ZCOT1270T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1270T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1270T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1270T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1280........................................*
FORM GET_DATA_ZCOV1280.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1280 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1280 .
ZCOV1280-MANDT =
ZCOT1280-MANDT .
ZCOV1280-ZZCD1 =
ZCOT1280-ZZCD1 .
    SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1280-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1280.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1280 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1280.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1280-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1280 WHERE
  ZZCD1 = ZCOV1280-ZZCD1 .
    IF SY-SUBRC = 0.
    DELETE ZCOT1280 .
    ENDIF.
    DELETE FROM ZCOT1280T WHERE
    ZZCD1 = ZCOT1280-ZZCD1 .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1280 WHERE
  ZZCD1 = ZCOV1280-ZZCD1 .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1280.
    ENDIF.
ZCOT1280-MANDT =
ZCOV1280-MANDT .
ZCOT1280-ZZCD1 =
ZCOV1280-ZZCD1 .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1280 ##WARN_OK.
    ELSE.
    INSERT ZCOT1280 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1280T WHERE
    ZZCD1 = ZCOT1280-ZZCD1 AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1280T.
ZCOT1280T-ZZCD1 =
ZCOT1280-ZZCD1 .
ZCOT1280T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1280T-ZZCD1TX =
ZCOV1280-ZZCD1TX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1280T ##WARN_OK.
    ELSE.
    INSERT ZCOT1280T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1280-UPD_FLAG,
STATUS_ZCOV1280-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1280.
  SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOV1280-ZZCD1 .
ZCOV1280-MANDT =
ZCOT1280-MANDT .
ZCOV1280-ZZCD1 =
ZCOT1280-ZZCD1 .
    SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1280-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1280-ZZCD1TX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1280 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1280-ZZCD1 TO
ZCOT1280-ZZCD1 .
MOVE ZCOV1280-MANDT TO
ZCOT1280-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1280'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1280 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1280'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1280-ZZCD1 TO
ZCOT1280T-ZZCD1 .
MOVE SY-LANGU TO
ZCOT1280T-SPRAS .
MOVE ZCOV1280-MANDT TO
ZCOT1280T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1280T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1280T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1280T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1290........................................*
FORM GET_DATA_ZCOV1290.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1290 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1290 .
ZCOV1290-MANDT =
ZCOT1290-MANDT .
ZCOV1290-ZZCD1 =
ZCOT1290-ZZCD1 .
ZCOV1290-ZZCD2 =
ZCOT1290-ZZCD2 .
    SELECT SINGLE * FROM ZCOT1290T WHERE
ZZCD1 = ZCOT1290-ZZCD1 AND
ZZCD2 = ZCOT1290-ZZCD2 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1290-ZZCD2TX =
ZCOT1290T-ZZCD2TX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1290-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1290-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1290.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1290 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1290.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1290-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1290 WHERE
  ZZCD1 = ZCOV1290-ZZCD1 AND
  ZZCD2 = ZCOV1290-ZZCD2 .
    IF SY-SUBRC = 0.
    DELETE ZCOT1290 .
    ENDIF.
    DELETE FROM ZCOT1290T WHERE
    ZZCD1 = ZCOT1290-ZZCD1 AND
    ZZCD2 = ZCOT1290-ZZCD2 .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1290 WHERE
  ZZCD1 = ZCOV1290-ZZCD1 AND
  ZZCD2 = ZCOV1290-ZZCD2 .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1290.
    ENDIF.
ZCOT1290-MANDT =
ZCOV1290-MANDT .
ZCOT1290-ZZCD1 =
ZCOV1290-ZZCD1 .
ZCOT1290-ZZCD2 =
ZCOV1290-ZZCD2 .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1290 ##WARN_OK.
    ELSE.
    INSERT ZCOT1290 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1290T WHERE
    ZZCD1 = ZCOT1290-ZZCD1 AND
    ZZCD2 = ZCOT1290-ZZCD2 AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1290T.
ZCOT1290T-ZZCD1 =
ZCOT1290-ZZCD1 .
ZCOT1290T-ZZCD2 =
ZCOT1290-ZZCD2 .
ZCOT1290T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1290T-ZZCD2TX =
ZCOV1290-ZZCD2TX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1290T ##WARN_OK.
    ELSE.
    INSERT ZCOT1290T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1290-UPD_FLAG,
STATUS_ZCOV1290-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1290.
  SELECT SINGLE * FROM ZCOT1290 WHERE
ZZCD1 = ZCOV1290-ZZCD1 AND
ZZCD2 = ZCOV1290-ZZCD2 .
ZCOV1290-MANDT =
ZCOT1290-MANDT .
ZCOV1290-ZZCD1 =
ZCOT1290-ZZCD1 .
ZCOV1290-ZZCD2 =
ZCOT1290-ZZCD2 .
    SELECT SINGLE * FROM ZCOT1290T WHERE
ZZCD1 = ZCOT1290-ZZCD1 AND
ZZCD2 = ZCOT1290-ZZCD2 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1290-ZZCD2TX =
ZCOT1290T-ZZCD2TX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1290-ZZCD2TX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1290-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1290-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1290-ZZCD1TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1290-ZZCD1TX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1290 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1290-ZZCD1 TO
ZCOT1290-ZZCD1 .
MOVE ZCOV1290-ZZCD2 TO
ZCOT1290-ZZCD2 .
MOVE ZCOV1290-MANDT TO
ZCOT1290-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1290'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1290 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1290'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1290-ZZCD1 TO
ZCOT1290T-ZZCD1 .
MOVE ZCOT1290-ZZCD2 TO
ZCOT1290T-ZZCD2 .
MOVE SY-LANGU TO
ZCOT1290T-SPRAS .
MOVE ZCOV1290-MANDT TO
ZCOT1290T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1290T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1290T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1290T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1290 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1290-MANDT =
ZCOV1290-MANDT .
ZCOT1290-ZZCD1 =
ZCOV1290-ZZCD1 .
ZCOT1290-ZZCD2 =
ZCOV1290-ZZCD2 .
  ZCOT1290T-ZZCD1 =
    ZCOT1290-ZZCD1 .
  ZCOT1290T-ZZCD2 =
    ZCOT1290-ZZCD2 .
  ZCOT1290T-SPRAS =
    SY-LANGU .
ZCOT1290T-ZZCD2TX =
ZCOV1290-ZZCD2TX .
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1290-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1290-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1290-ZZCD1TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1290-ZZCD1TX .
    ENDIF.
ENDFORM.
*...processing: ZCOV1300........................................*
FORM GET_DATA_ZCOV1300.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1300 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1300 .
ZCOV1300-MANDT =
ZCOT1300-MANDT .
ZCOV1300-ZZCD1 =
ZCOT1300-ZZCD1 .
ZCOV1300-ZZCD2 =
ZCOT1300-ZZCD2 .
ZCOV1300-ZZCD3 =
ZCOT1300-ZZCD3 .
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1300-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM ZCOT1290 WHERE
ZZCD1 = ZCOT1300-ZZCD1 AND
ZZCD2 = ZCOT1300-ZZCD2 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1290T WHERE
ZZCD1 = ZCOT1290-ZZCD1 AND
ZZCD2 = ZCOT1290-ZZCD2 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD2TX =
ZCOT1290T-ZZCD2TX .
      ENDIF.
    ENDIF.
    SELECT SINGLE * FROM ZCOT1300T WHERE
ZZCD1 = ZCOT1300-ZZCD1 AND
ZZCD2 = ZCOT1300-ZZCD2 AND
ZZCD3 = ZCOT1300-ZZCD3 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD3TX =
ZCOT1300T-ZZCD3TX .
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1300.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1300 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1300.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1300-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1300 WHERE
  ZZCD1 = ZCOV1300-ZZCD1 AND
  ZZCD2 = ZCOV1300-ZZCD2 AND
  ZZCD3 = ZCOV1300-ZZCD3 .
    IF SY-SUBRC = 0.
    DELETE ZCOT1300 .
    ENDIF.
    DELETE FROM ZCOT1300T WHERE
    ZZCD1 = ZCOT1300-ZZCD1 AND
    ZZCD2 = ZCOT1300-ZZCD2 AND
    ZZCD3 = ZCOT1300-ZZCD3 .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1300 WHERE
  ZZCD1 = ZCOV1300-ZZCD1 AND
  ZZCD2 = ZCOV1300-ZZCD2 AND
  ZZCD3 = ZCOV1300-ZZCD3 .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1300.
    ENDIF.
ZCOT1300-MANDT =
ZCOV1300-MANDT .
ZCOT1300-ZZCD1 =
ZCOV1300-ZZCD1 .
ZCOT1300-ZZCD2 =
ZCOV1300-ZZCD2 .
ZCOT1300-ZZCD3 =
ZCOV1300-ZZCD3 .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1300 ##WARN_OK.
    ELSE.
    INSERT ZCOT1300 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZCOT1300T WHERE
    ZZCD1 = ZCOT1300-ZZCD1 AND
    ZZCD2 = ZCOT1300-ZZCD2 AND
    ZZCD3 = ZCOT1300-ZZCD3 AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZCOT1300T.
ZCOT1300T-ZZCD1 =
ZCOT1300-ZZCD1 .
ZCOT1300T-ZZCD2 =
ZCOT1300-ZZCD2 .
ZCOT1300T-ZZCD3 =
ZCOT1300-ZZCD3 .
ZCOT1300T-SPRAS =
SY-LANGU .
      ENDIF.
ZCOT1300T-ZZCD3TX =
ZCOV1300-ZZCD3TX .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1300T ##WARN_OK.
    ELSE.
    INSERT ZCOT1300T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1300-UPD_FLAG,
STATUS_ZCOV1300-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1300.
  SELECT SINGLE * FROM ZCOT1300 WHERE
ZZCD1 = ZCOV1300-ZZCD1 AND
ZZCD2 = ZCOV1300-ZZCD2 AND
ZZCD3 = ZCOV1300-ZZCD3 .
ZCOV1300-MANDT =
ZCOT1300-MANDT .
ZCOV1300-ZZCD1 =
ZCOT1300-ZZCD1 .
ZCOV1300-ZZCD2 =
ZCOT1300-ZZCD2 .
ZCOV1300-ZZCD3 =
ZCOT1300-ZZCD3 .
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1300-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1300-ZZCD1TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1300-ZZCD1TX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1290 WHERE
ZZCD1 = ZCOT1300-ZZCD1 AND
ZZCD2 = ZCOT1300-ZZCD2 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1290T WHERE
ZZCD1 = ZCOT1290-ZZCD1 AND
ZZCD2 = ZCOT1290-ZZCD2 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD2TX =
ZCOT1290T-ZZCD2TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1300-ZZCD2TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1300-ZZCD2TX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1300T WHERE
ZZCD1 = ZCOT1300-ZZCD1 AND
ZZCD2 = ZCOT1300-ZZCD2 AND
ZZCD3 = ZCOT1300-ZZCD3 AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD3TX =
ZCOT1300T-ZZCD3TX .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1300-ZZCD3TX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1300 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1300-ZZCD1 TO
ZCOT1300-ZZCD1 .
MOVE ZCOV1300-ZZCD2 TO
ZCOT1300-ZZCD2 .
MOVE ZCOV1300-ZZCD3 TO
ZCOT1300-ZZCD3 .
MOVE ZCOV1300-MANDT TO
ZCOT1300-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1300'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1300 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1300'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZCOT1300-ZZCD1 TO
ZCOT1300T-ZZCD1 .
MOVE ZCOT1300-ZZCD2 TO
ZCOT1300T-ZZCD2 .
MOVE ZCOT1300-ZZCD3 TO
ZCOT1300T-ZZCD3 .
MOVE SY-LANGU TO
ZCOT1300T-SPRAS .
MOVE ZCOV1300-MANDT TO
ZCOT1300T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1300T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1300T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1300T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1300 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1300-MANDT =
ZCOV1300-MANDT .
ZCOT1300-ZZCD1 =
ZCOV1300-ZZCD1 .
ZCOT1300-ZZCD2 =
ZCOV1300-ZZCD2 .
ZCOT1300-ZZCD3 =
ZCOV1300-ZZCD3 .
    SELECT SINGLE * FROM ZCOT1280 WHERE
ZZCD1 = ZCOT1300-ZZCD1 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1280T WHERE
ZZCD1 = ZCOT1280-ZZCD1 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD1TX =
ZCOT1280T-ZZCD1TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1300-ZZCD1TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1300-ZZCD1TX .
    ENDIF.
    SELECT SINGLE * FROM ZCOT1290 WHERE
ZZCD1 = ZCOT1300-ZZCD1 AND
ZZCD2 = ZCOT1300-ZZCD2 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM ZCOT1290T WHERE
ZZCD1 = ZCOT1290-ZZCD1 AND
ZZCD2 = ZCOT1290-ZZCD2 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1300-ZZCD2TX =
ZCOT1290T-ZZCD2TX .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1300-ZZCD2TX .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1300-ZZCD2TX .
    ENDIF.
ENDFORM.
*...processing: ZCOV1310........................................*
FORM GET_DATA_ZCOV1310.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1310 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1310 .
ZCOV1310-MANDT =
ZCOT1310-MANDT .
ZCOV1310-BUKRS =
ZCOT1310-BUKRS .
ZCOV1310-ZZBGU =
ZCOT1310-ZZBGU .
ZCOV1310-ZZBGD =
ZCOT1310-ZZBGD .
ZCOV1310-ZZPRG =
ZCOT1310-ZZPRG .
ZCOV1310-WW120 =
ZCOT1310-WW120 .
<VIM_TOTAL_STRUC> = ZCOV1310.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1310 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1310.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1310-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1310 WHERE
  BUKRS = ZCOV1310-BUKRS AND
  ZZBGU = ZCOV1310-ZZBGU AND
  ZZBGD = ZCOV1310-ZZBGD AND
  ZZPRG = ZCOV1310-ZZPRG .
    IF SY-SUBRC = 0.
    DELETE ZCOT1310 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1310 WHERE
  BUKRS = ZCOV1310-BUKRS AND
  ZZBGU = ZCOV1310-ZZBGU AND
  ZZBGD = ZCOV1310-ZZBGD AND
  ZZPRG = ZCOV1310-ZZPRG .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1310.
    ENDIF.
ZCOT1310-MANDT =
ZCOV1310-MANDT .
ZCOT1310-BUKRS =
ZCOV1310-BUKRS .
ZCOT1310-ZZBGU =
ZCOV1310-ZZBGU .
ZCOT1310-ZZBGD =
ZCOV1310-ZZBGD .
ZCOT1310-ZZPRG =
ZCOV1310-ZZPRG .
ZCOT1310-WW120 =
ZCOV1310-WW120 .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1310 ##WARN_OK.
    ELSE.
    INSERT ZCOT1310 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1310-UPD_FLAG,
STATUS_ZCOV1310-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1310.
  SELECT SINGLE * FROM ZCOT1310 WHERE
BUKRS = ZCOV1310-BUKRS AND
ZZBGU = ZCOV1310-ZZBGU AND
ZZBGD = ZCOV1310-ZZBGD AND
ZZPRG = ZCOV1310-ZZPRG .
ZCOV1310-MANDT =
ZCOT1310-MANDT .
ZCOV1310-BUKRS =
ZCOT1310-BUKRS .
ZCOV1310-ZZBGU =
ZCOT1310-ZZBGU .
ZCOV1310-ZZBGD =
ZCOT1310-ZZBGD .
ZCOV1310-ZZPRG =
ZCOT1310-ZZPRG .
ZCOV1310-WW120 =
ZCOT1310-WW120 .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1310 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1310-BUKRS TO
ZCOT1310-BUKRS .
MOVE ZCOV1310-ZZBGU TO
ZCOT1310-ZZBGU .
MOVE ZCOV1310-ZZBGD TO
ZCOT1310-ZZBGD .
MOVE ZCOV1310-ZZPRG TO
ZCOT1310-ZZPRG .
MOVE ZCOV1310-MANDT TO
ZCOT1310-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1310'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1310 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1310'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZCOV1320........................................*
FORM GET_DATA_ZCOV1320.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZCOT1320 WHERE
(VIM_WHERETAB) .
    CLEAR ZCOV1320 .
ZCOV1320-MANDT =
ZCOT1320-MANDT .
ZCOV1320-PSPNR =
ZCOT1320-PSPNR .
ZCOV1320-WW120 =
ZCOT1320-WW120 .
ZCOV1320-ERDAT =
ZCOT1320-ERDAT .
ZCOV1320-ERZET =
ZCOT1320-ERZET .
ZCOV1320-ERNAM =
ZCOT1320-ERNAM .
ZCOV1320-AEDAT =
ZCOT1320-AEDAT .
ZCOV1320-AEZET =
ZCOT1320-AEZET .
ZCOV1320-AENAM =
ZCOT1320-AENAM .
    SELECT SINGLE * FROM PRPS WHERE
PSPNR = ZCOT1320-PSPNR .
    IF SY-SUBRC EQ 0.
ZCOV1320-POST1 =
PRPS-POST1 .
    ENDIF.
    SELECT SINGLE * FROM T2501 WHERE
WW120 = ZCOT1320-WW120 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T25A1 WHERE
WW120 = T2501-WW120 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1320-BEZEK =
T25A1-BEZEK .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZCOV1320.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZCOV1320 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZCOV1320.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZCOV1320-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1320 WHERE
  PSPNR = ZCOV1320-PSPNR .
    IF SY-SUBRC = 0.
    DELETE ZCOT1320 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZCOT1320 WHERE
  PSPNR = ZCOV1320-PSPNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZCOT1320.
    ENDIF.
ZCOT1320-MANDT =
ZCOV1320-MANDT .
ZCOT1320-PSPNR =
ZCOV1320-PSPNR .
ZCOT1320-WW120 =
ZCOV1320-WW120 .
ZCOT1320-ERDAT =
ZCOV1320-ERDAT .
ZCOT1320-ERZET =
ZCOV1320-ERZET .
ZCOT1320-ERNAM =
ZCOV1320-ERNAM .
ZCOT1320-AEDAT =
ZCOV1320-AEDAT .
ZCOT1320-AEZET =
ZCOV1320-AEZET .
ZCOT1320-AENAM =
ZCOV1320-AENAM .
    IF SY-SUBRC = 0.
    UPDATE ZCOT1320 ##WARN_OK.
    ELSE.
    INSERT ZCOT1320 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZCOV1320-UPD_FLAG,
STATUS_ZCOV1320-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZCOV1320.
  SELECT SINGLE * FROM ZCOT1320 WHERE
PSPNR = ZCOV1320-PSPNR .
ZCOV1320-MANDT =
ZCOT1320-MANDT .
ZCOV1320-PSPNR =
ZCOT1320-PSPNR .
ZCOV1320-WW120 =
ZCOT1320-WW120 .
ZCOV1320-ERDAT =
ZCOT1320-ERDAT .
ZCOV1320-ERZET =
ZCOT1320-ERZET .
ZCOV1320-ERNAM =
ZCOT1320-ERNAM .
ZCOV1320-AEDAT =
ZCOT1320-AEDAT .
ZCOV1320-AEZET =
ZCOT1320-AEZET .
ZCOV1320-AENAM =
ZCOT1320-AENAM .
    SELECT SINGLE * FROM PRPS WHERE
PSPNR = ZCOT1320-PSPNR .
    IF SY-SUBRC EQ 0.
ZCOV1320-POST1 =
PRPS-POST1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1320-POST1 .
    ENDIF.
    SELECT SINGLE * FROM T2501 WHERE
WW120 = ZCOT1320-WW120 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T25A1 WHERE
WW120 = T2501-WW120 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1320-BEZEK =
T25A1-BEZEK .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1320-BEZEK .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1320-BEZEK .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZCOV1320 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZCOV1320-PSPNR TO
ZCOT1320-PSPNR .
MOVE ZCOV1320-MANDT TO
ZCOT1320-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZCOT1320'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZCOT1320 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZCOT1320'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZCOV1320 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZCOT1320-MANDT =
ZCOV1320-MANDT .
ZCOT1320-PSPNR =
ZCOV1320-PSPNR .
ZCOT1320-WW120 =
ZCOV1320-WW120 .
ZCOT1320-ERDAT =
ZCOV1320-ERDAT .
ZCOT1320-ERZET =
ZCOV1320-ERZET .
ZCOT1320-ERNAM =
ZCOV1320-ERNAM .
ZCOT1320-AEDAT =
ZCOV1320-AEDAT .
ZCOT1320-AEZET =
ZCOV1320-AEZET .
ZCOT1320-AENAM =
ZCOV1320-AENAM .
    SELECT SINGLE * FROM PRPS WHERE
PSPNR = ZCOT1320-PSPNR .
    IF SY-SUBRC EQ 0.
ZCOV1320-POST1 =
PRPS-POST1 .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1320-POST1 .
    ENDIF.
    SELECT SINGLE * FROM T2501 WHERE
WW120 = ZCOT1320-WW120 .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T25A1 WHERE
WW120 = T2501-WW120 AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZCOV1320-BEZEK =
T25A1-BEZEK .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZCOV1320-BEZEK .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZCOV1320-BEZEK .
    ENDIF.
ENDFORM.

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
