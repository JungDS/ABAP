*&---------------------------------------------------------------------*
*& Report YDEL_COIF
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
*&--------------------------------------------------------------------*
*& Object          REPS ZKAAFRU2
*& Object Header   PROG ZKAAFRU2
*&--------------------------------------------------------------------*
*----------------------------------------------------------------------*
* MODIFICATION LOG
*----------------------------------------------------------------------*
* Tag  Date.       Author.         Description.
*----------------------------------------------------------------------*
* N    2020.03.02  BSGSM_CO(JCHS) ZCOR0420 Original Backup
*----------------------------------------------------------------------*
*>>>> START OF INSERTION <<<<
REPORT ZCOR0420B.
*REPORT  RKAAFRU2.
* Select confirmations from table AFRU.
* Find double CO-documents using CPU-date.
* Confirmations can be analyzed with transaction COFC (from rel. 4.0).
* Optional: delete double CO-documents via submit report RKACOR21.

TABLES: AFRU, COBK, AFVC, T430, BKPF.
PARAMETERS:
  P_KOKRS LIKE CCSS-KOKRS MEMORY ID CAC OBLIGATORY.
SELECT-OPTIONS:  S_CPUDT FOR COBK-CPUDT.

SELECT-OPTIONS : S_BUKRS FOR BKPF-BUKRS OBLIGATORY NO-EXTENSION NO INTERVALS,
                 S_BELNR FOR BKPF-BELNR OBLIGATORY NO-EXTENSION NO INTERVALS.

PARAMETERS:
  P_DELETE LIKE BOOLE-BOOLE,
  P_TSTRUN LIKE COFI_SCR-FLG_TEST DEFAULT 'X'.


* Name of program to delete CO-documents (default RKACOR21)
DATA:
  GD_DELPROGRAM LIKE SY-REPID VALUE 'ZCOR0430'.

DATA:
  GD_CNT_AFRU   LIKE SY-TABIX,
  GD_CNT_COBK   LIKE SY-TABIX,
  GD_AWREF      LIKE ACCHD-AWREF,
  GD_AWORG      LIKE ACCHD-AWORG,
  GD_FOUND      LIKE BOOLE-BOOLE,
  GD_LAST_REFBN LIKE COBK-REFBN,
  GD_LAST_AWORG LIKE COBK-AWORG.

DATA: BEGIN OF GTV_COBK OCCURS 0,
        KOKRS LIKE COBK-KOKRS,
        BELNR LIKE COBK-BELNR,
        CPUDT LIKE COBK-CPUDT,
        AWTYP LIKE COBK-AWTYP,
        REFBN LIKE COBK-REFBN,
        AWORG LIKE COBK-AWORG,
        REFBK LIKE COBK-REFBK,
        REFGJ LIKE COBK-REFGJ,
*        REFBN LIKE COBK-REFBN,
      END OF GTV_COBK.

RANGES:
  RA_BELNR FOR COBK-BELNR.



FORMAT INTENSIFIED OFF.

SELECT * FROM COBK
   INTO CORRESPONDING FIELDS OF TABLE GTV_COBK
   WHERE  KOKRS   = P_KOKRS
   AND    AWTYP   = 'BKPF'
   AND    VRGNG   = 'COIN' " 'KOLI'
   AND    CPUDT   IN S_CPUDT
   AND    BLART   IN ('Z6', 'Z3')
   AND    REFBK   IN S_BUKRS
   AND    REFBN   IN S_BELNR.

LOOP AT GTV_COBK.
*  SELECT COUNT(*) FROM COBK
*         WHERE  REFBT  =  'R'
*         AND    REFBN  =  GTV_COBK-REFBN
*         AND    AWTYP  =  GTV_COBK-AWTYP
*         AND    AWORG  =  GTV_COBK-AWORG
*         AND    VRGNG  = 'COIN'.

  SELECT COUNT(*)
    FROM BKPF
   WHERE BUKRS EQ GTV_COBK-REFBK
     AND GJAHR EQ GTV_COBK-REFGJ
     AND BELNR EQ GTV_COBK-REFBN
     AND BLART IN ('Z6', 'Z3')
     AND BSTAT NE 'Z'.

  IF SY-DBCNT > 0.
    DELETE GTV_COBK.
  ENDIF.
ENDLOOP.
SORT GTV_COBK BY REFBN AWORG KOKRS BELNR.

WRITE: (12) TEXT-F01 CENTERED, "회계전표
       (08) TEXT-F02 CENTERED, "회사코드
       (08) TEXT-F03 CENTERED, "회계년도
       (12) TEXT-F04 CENTERED. "CO전표.
NEW-LINE.

LOOP AT GTV_COBK.
  IF GD_LAST_AWORG <> GTV_COBK-AWORG OR
     GD_LAST_REFBN <> GTV_COBK-REFBN.
    WRITE: (12) GTV_COBK-REFBN INTENSIFIED HOTSPOT.
    WRITE: (08) GTV_COBK-AWORG(04) INTENSIFIED.
    WRITE: (08) GTV_COBK-AWORG+04(04) INTENSIFIED.
  ENDIF.
  WRITE (12) GTV_COBK-BELNR UNDER GTV_COBK-BELNR.
  HIDE: GTV_COBK-REFBN,
        GTV_COBK-AWORG.
  GD_LAST_REFBN = GTV_COBK-REFBN.
  GD_LAST_AWORG = GTV_COBK-AWORG.
  NEW-LINE.
ENDLOOP.

SKIP.
DESCRIBE TABLE GTV_COBK LINES GD_CNT_COBK.
WRITE: / 'COBK: ', GD_CNT_COBK LEFT-JUSTIFIED INTENSIFIED.

CHECK P_DELETE = 'X'.

CLEAR:
  GD_LAST_REFBN,
  GD_LAST_AWORG,
  GD_CNT_COBK.

RA_BELNR-SIGN   = 'I'.
RA_BELNR-OPTION = 'EQ'.
LOOP AT GTV_COBK.
  IF  GD_LAST_REFBN NE GTV_COBK-REFBN
  OR GD_LAST_AWORG NE GTV_COBK-AWORG.
    RA_BELNR-LOW = GTV_COBK-BELNR.
    APPEND RA_BELNR.
    ADD 1 TO GD_CNT_COBK.
  ENDIF.
  GD_LAST_REFBN = GTV_COBK-REFBN.
  GD_LAST_AWORG = GTV_COBK-AWORG.
ENDLOOP.

READ TABLE RA_BELNR INDEX 1.
CHECK SY-SUBRC = 0.

MESSAGE S001(K5) WITH 'Delete COBK records:' GD_CNT_COBK.
SUBMIT (GD_DELPROGRAM)
       USING SELECTION-SCREEN 1000
        WITH P_KOKRS = P_KOKRS
        WITH P_PROT  = 'X'
        WITH P_TEST  = P_TSTRUN
        WITH S_BELNR IN RA_BELNR
        AND RETURN.

AT LINE-SELECTION.
  CHECK NOT GTV_COBK-REFBN IS INITIAL.
  GD_AWREF = GTV_COBK-REFBN.
  GD_AWORG = GTV_COBK-AWORG.
  CALL FUNCTION 'AC_DOCUMENT_RECORD'
    EXPORTING
      I_AWTYP = 'BKPF'
      I_AWREF = GD_AWREF
      I_AWORG = GD_AWORG.
*>>>> END OF INSERTION <<<<<<
