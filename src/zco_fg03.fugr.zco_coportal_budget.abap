FUNCTION ZCO_COPORTAL_BUDGET .
*"----------------------------------------------------------------------
*"*"Local interface:
*"  EXPORTING
*"     VALUE(E_RESULT) TYPE  CHAR1
*"     VALUE(E_MSG) TYPE  CHAR255
*"  TABLES
*"      ET_BUDGET STRUCTURE  ZCOS0250
*"----------------------------------------------------------------------

  DATA: LV_POSID TYPE PS_POSID,
        LV_KSTAR TYPE KSTAR.

  DATA LV_CTYPE TYPE ZECTYPE.

  DATA: LV_NTIME     TYPE I,
        LV_CPPERL    TYPE PPERL,
        LV_FIELDNAME TYPE FIELDNAME.

  DATA LV_MONTH TYPE N LENGTH 2.
  DATA LV_OBJNR TYPE J_OBJNR.

  DATA: BEGIN OF LT_MONTH OCCURS 0,
          V1 TYPE N LENGTH 2,
        END OF LT_MONTH.

  FIELD-SYMBOLS <FS_WKG> TYPE ANY.

  DATA: LV_DSUM TYPE HSLVT9_CS,
        LV_FSUM TYPE HSLVT9_CS.

  RANGES R_BUDAT FOR ACDOCA-BUDAT.

  LOOP AT ET_BUDGET.

    CLEAR: R_BUDAT, R_BUDAT[], LV_NTIME, LV_MONTH.

    CLEAR: LT_MONTH, LT_MONTH[].

    CLEAR: ET_BUDGET-HSLYEAR,
           ET_BUDGET-HSLPERIO,
           ET_BUDGET-HSLSPEND.

    CLEAR: LV_DSUM, LV_FSUM.

    MOVE: ET_BUDGET-EINDT(4) TO ET_BUDGET-GJAHR,
          'KRW'              TO ET_BUDGET-WAERS.

    CALL FUNCTION 'CONVERSION_EXIT_ABPSN_INPUT'
      EXPORTING
        INPUT  = ET_BUDGET-POSID
      IMPORTING
        OUTPUT = LV_POSID.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = ET_BUDGET-SAKNR
      IMPORTING
        OUTPUT = LV_KSTAR.

    SELECT SINGLE * FROM PRPS
      INTO @DATA(LS_PRPS)
     WHERE POSID = @LV_POSID.

    IF SY-SUBRC = 0.

      LV_OBJNR = LS_PRPS-OBJNR.

      CASE LS_PRPS-ZZCYP.   " WBS 통제유형

        WHEN '1' OR '2' OR '3'.
          LV_CTYPE = LS_PRPS-ZZCYP.

        WHEN OTHERS.   "비통제

          ET_BUDGET-CPERD = '5'.       "예산통제 제외
          MODIFY ET_BUDGET.
          CONTINUE.

      ENDCASE.

*-- 기간별 예산통제 제외
      SELECT SINGLE BEXCL FROM ZCOT0030
        INTO @DATA(LV_BEXCL)
       WHERE GJAHR = @ET_BUDGET-GJAHR
         AND KOKRS = @GC_KOKRS
         AND POSID = @LV_POSID.

      IF SY-SUBRC = 0  AND LV_BEXCL = ABAP_TRUE.

        ET_BUDGET-CPERD = '5'.       "예산통제 제외
        MODIFY ET_BUDGET.
        CONTINUE.

      ENDIF.

      SELECT SINGLE CPERD INTO @ET_BUDGET-CPERD
        FROM ZCOT0010
       WHERE CTYPE  = @LS_PRPS-ZZCYP
         AND FKSTAR = @LV_KSTAR
         AND KOKRS  = @GC_KOKRS
         AND GJAHR  = @ET_BUDGET-GJAHR.

      CASE ET_BUDGET-CPERD.

        WHEN '1'.

          LV_NTIME = 1.
          LV_MONTH = ET_BUDGET-EINDT+4(2).

          R_BUDAT-LOW    = ET_BUDGET-EINDT(4) && '0101'.

          CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
            EXPORTING
              DAY_IN            = R_BUDAT-LOW
            IMPORTING
              LAST_DAY_OF_MONTH = R_BUDAT-HIGH
            EXCEPTIONS
              DAY_IN_NO_DATE    = 1
              OTHERS            = 2.

          R_BUDAT-SIGN   = 'I'.
          R_BUDAT-OPTION = 'BT'.
          APPEND R_BUDAT.

        WHEN '2'.

          LV_NTIME = 3.

          IF ET_BUDGET-EINDT+4(4) >= '0101' AND
             ET_BUDGET-EINDT+4(4) <= '0331'.

            LV_MONTH = '01'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0101'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '0331'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ELSEIF ET_BUDGET-EINDT+4(4) >= '0401' AND
                  ET_BUDGET-EINDT+4(4) <= '0630'.

            LV_MONTH = '04'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0401'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '0630'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ELSEIF ET_BUDGET-EINDT+4(4) >= '0701' AND
                   ET_BUDGET-EINDT+4(4) <= '0930'.

            LV_MONTH = '07'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0701'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '0930'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ELSEIF ET_BUDGET-EINDT+4(4) >= '1001' AND
                   ET_BUDGET-EINDT+4(4) <= '1231'.

            LV_MONTH = '10'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '1001'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '1231'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ENDIF.

        WHEN '3'.

          LV_NTIME = 6.

          IF ET_BUDGET-EINDT+4(4) >= '0101' AND
             ET_BUDGET-EINDT+4(4) <= '0630'.

            LV_MONTH = '01'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0101'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '0630'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ELSEIF ET_BUDGET-EINDT+4(4) >= '0701' AND
                  ET_BUDGET-EINDT+4(4) <= '1231'.

            LV_MONTH = '07'.

            R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0701'.
            R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '1231'.
            R_BUDAT-SIGN   = 'I'.
            R_BUDAT-OPTION = 'BT'.
            APPEND R_BUDAT.

          ENDIF.

        WHEN '4'.

          LV_NTIME = 12.
          LV_MONTH = '01'.

          R_BUDAT-LOW    = ET_BUDGET-GJAHR && '0101'.
          R_BUDAT-HIGH   = ET_BUDGET-GJAHR && '1231'.
          R_BUDAT-SIGN   = 'I'.
          R_BUDAT-OPTION = 'BT'.
          APPEND R_BUDAT.

        WHEN '5'.

          MODIFY ET_BUDGET.
          CONTINUE.

      ENDCASE.

    ELSE.
      E_RESULT = 'E'.
      MESSAGE S000(ZCO01) WITH TEXT-E01 ET_BUDGET-POSID
      INTO E_MSG.
      EXIT.
    ENDIF.

    DO LV_NTIME TIMES.
      LT_MONTH-V1 = LV_MONTH.
      APPEND LT_MONTH.
      ADD 1 TO LV_MONTH.
    ENDDO.

    SELECT ROBJNR,
           SUM( HSL01 ) AS HSL01, SUM( HSL02 ) AS HSL02,
           SUM( HSL03 ) AS HSL03, SUM( HSL04 ) AS HSL04,
           SUM( HSL05 ) AS HSL05, SUM( HSL06 ) AS HSL06,
           SUM( HSL07 ) AS HSL07, SUM( HSL08 ) AS HSL08,
           SUM( HSL09 ) AS HSL09, SUM( HSL10 ) AS HSL10,
           SUM( HSL11 ) AS HSL11, SUM( HSL12 ) AS HSL12
      INTO TABLE @DATA(LT_ZCOT0040)
    FROM ZCOT0040
   WHERE RLDNR  = '00'
     AND RRCTY  = '1'
     AND RVERS  = 'B1'
     AND RYEAR  = @ET_BUDGET-GJAHR
     AND ROBJNR = @LV_OBJNR
     AND RKOKRS = @GC_KOKRS
     AND RKSTAR = @LV_KSTAR
    GROUP BY ROBJNR.

*-- 실적
    SELECT OBJNR,
           SUM( WKG001 ) AS WKG001, SUM( WKG002 ) AS WKG002,
           SUM( WKG003 ) AS WKG003, SUM( WKG004 ) AS WKG004,
           SUM( WKG005 ) AS WKG005, SUM( WKG006 ) AS WKG006,
           SUM( WKG007 ) AS WKG007, SUM( WKG008 ) AS WKG008,
           SUM( WKG009 ) AS WKG009, SUM( WKG010 ) AS WKG010,
           SUM( WKG011 ) AS WKG011, SUM( WKG012 ) AS WKG012
      INTO TABLE @DATA(LT_COSP)
      FROM COSP
     WHERE LEDNR = '00'
       AND VERSN = '000'
       AND WRTTP IN ('04', '60', '21', '22')
       AND GJAHR = @ET_BUDGET-GJAHR
       AND KSTAR = @LV_KSTAR
       AND OBJNR = @LV_OBJNR
       AND VRGNG <> 'SDOR'
     GROUP BY OBJNR.

    SELECT OBJNR,
           SUM( WKG001 ) AS WKG001, SUM( WKG002 ) AS WKG002,
           SUM( WKG003 ) AS WKG003, SUM( WKG004 ) AS WKG004,
           SUM( WKG005 ) AS WKG005, SUM( WKG006 ) AS WKG006,
           SUM( WKG007 ) AS WKG007, SUM( WKG008 ) AS WKG008,
           SUM( WKG009 ) AS WKG009, SUM( WKG010 ) AS WKG010,
           SUM( WKG011 ) AS WKG011, SUM( WKG012 ) AS WKG012
      INTO TABLE @DATA(LT_COSP_RKU)
      FROM COSP
     WHERE LEDNR = '00'
       AND VERSN = '000'
       AND WRTTP IN ('04', '60', '21', '22')
       AND GJAHR = @ET_BUDGET-GJAHR
       AND KSTAR = @LV_KSTAR
       AND OBJNR = @LV_OBJNR
       AND VRGNG = 'RKU1'
     GROUP BY OBJNR.

    SELECT OBJNR,
           SUM( HSL ) AS HSL
      INTO TABLE @DATA(LT_ACDOCA)
      FROM ACDOCA
     WHERE RLDNR = '0L'
       AND GJAHR = @ET_BUDGET-GJAHR
       AND KOKRS = @GC_KOKRS
       AND RACCT = @LV_KSTAR
       AND OBJNR = @LV_OBJNR
       AND BUDAT IN @R_BUDAT
       AND BLART IN ('DD', 'SS')
     GROUP BY OBJNR.

*-- 1년 예산
    CLEAR LV_MONTH.

    READ TABLE LT_ZCOT0040
     ASSIGNING FIELD-SYMBOL(<LS_ZCOT0040>) INDEX 1.

    IF SY-SUBRC = 0.
      DO 12 TIMES.
        ADD 1 TO LV_MONTH.
        LV_FIELDNAME = '<LS_ZCOT0040>-HSL' && LV_MONTH.
        ASSIGN (LV_FIELDNAME) TO FIELD-SYMBOL(<FS_HSL>).
        ET_BUDGET-HSLYEAR = ET_BUDGET-HSLYEAR + <FS_HSL>.
      ENDDO.
    ENDIF.

    READ TABLE LT_ZCOT0040
     ASSIGNING FIELD-SYMBOL(<LS_ZCOT0040_PERIO>) INDEX 1.

    READ TABLE LT_COSP
     ASSIGNING FIELD-SYMBOL(<LS_COSP>) INDEX 1.

    READ TABLE LT_COSP_RKU
         ASSIGNING FIELD-SYMBOL(<LS_COSP_RKU>) INDEX 1.

    READ TABLE LT_ACDOCA ASSIGNING FIELD-SYMBOL(<LS_ACDOCA>)
                   INDEX 1.

*-- 기간 실적및 예산
    LOOP AT LT_MONTH.

      IF <LS_ZCOT0040_PERIO> IS ASSIGNED.
        LV_FIELDNAME = '<LS_ZCOT0040_PERIO>-HSL' && LT_MONTH-V1.
        ASSIGN (LV_FIELDNAME) TO FIELD-SYMBOL(<FS_HSLPERIO>).
        ET_BUDGET-HSLPERIO = ET_BUDGET-HSLPERIO + <FS_HSLPERIO>.

      ENDIF.

*-- COSP
      IF <LS_COSP> IS ASSIGNED.
        LV_FIELDNAME = '<LS_COSP>-WKG0' && LT_MONTH-V1.

        ASSIGN (LV_FIELDNAME) TO <FS_WKG>.
        LV_DSUM = LV_DSUM + <FS_WKG>.
      ENDIF.

*-- RKU
      IF <LS_COSP_RKU> IS ASSIGNED.
        LV_FIELDNAME = '<LS_COSP_RKU>-WKG0' && LT_MONTH-V1.

        ASSIGN (LV_FIELDNAME) TO <FS_WKG>.
        LV_FSUM = LV_FSUM + <FS_WKG>.
      ENDIF.

    ENDLOOP.

    IF <LS_ACDOCA> IS ASSIGNED.
      LV_FSUM = LV_FSUM + <LS_ACDOCA>-HSL.
    ENDIF.

    ET_BUDGET-HSLSPEND = LV_DSUM - LV_FSUM.

    MODIFY ET_BUDGET.

    UNASSIGN: <LS_ZCOT0040_PERIO>, <LS_COSP>,
              <LS_COSP_RKU>, <LS_ACDOCA>.

    CLEAR: LT_ZCOT0040[], LT_COSP[], LT_COSP_RKU[], LT_ACDOCA[].

  ENDLOOP.

  IF E_RESULT IS INITIAL.
    E_RESULT = 'S'.
    MESSAGE S005(ZCO01) INTO E_MSG.
  ENDIF.

ENDFUNCTION.
